{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#fakeredis-a-python-implementation-of-redis-server","title":"fakeredis: A python implementation of redis server","text":"<p>fakeredis is a pure-Python implementation of the redis-py python client that simulates talking to a redis server. This was created for a single purpose: to write tests. Setting up redis is not hard, but many times you want to write tests that do not talk to an external server (such as redis). This module now allows tests to simply use this module as a reasonable substitute for redis.</p> <p>For a list of supported/unsupported redis commands, see Supported commands.</p>"},{"location":"#installation","title":"Installation","text":"<p>To install fakeredis-py, simply:</p> <pre><code>pip install fakeredis        ## No additional modules support\npip install fakeredis[lua]   ## Support for LUA scripts\npip install fakeredis[json]  ## Support for RedisJSON commands\n</code></pre>"},{"location":"#how-to-use","title":"How to Use","text":""},{"location":"#general-usage","title":"General usage","text":"<p>FakeRedis can imitate Redis server version 6.x or 7.x. If you do not specify the version, version 7 is used by default.</p> <p>The intent is for fakeredis to act as though you're talking to a real redis server. It does this by storing state internally. For example:</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis(version=6)\n&gt;&gt;&gt; r.set('foo', 'bar')\nTrue\n&gt;&gt;&gt; r.get('foo')\n'bar'\n&gt;&gt;&gt; r.lpush('bar', 1)\n1\n&gt;&gt;&gt; r.lpush('bar', 2)\n2\n&gt;&gt;&gt; r.lrange('bar', 0, -1)\n[2, 1]\n</code></pre> <p>The state is stored in an instance of <code>FakeServer</code>. If one is not provided at construction, a new instance is automatically created for you, but you can explicitly create one to share state:</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; server = fakeredis.FakeServer()\n&gt;&gt;&gt; r1 = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r1.set('foo', 'bar')\nTrue\n&gt;&gt;&gt; r2 = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r2.get('foo')\n'bar'\n&gt;&gt;&gt; r2.set('bar', 'baz')\nTrue\n&gt;&gt;&gt; r1.get('bar')\n'baz'\n&gt;&gt;&gt; r2.get('bar')\n'baz'\n</code></pre> <p>It is also possible to mock connection errors, so you can effectively test your error handling. Simply set the connected attribute of the server to <code>False</code> after initialization.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; server = fakeredis.FakeServer()\n&gt;&gt;&gt; server.connected = False\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r.set('foo', 'bar')\nConnectionError: FakeRedis is emulating a connection error.\n&gt;&gt;&gt; server.connected = True\n&gt;&gt;&gt; r.set('foo', 'bar')\nTrue\n</code></pre> <p>Fakeredis implements the same interface as <code>redis-py</code>, the popular redis client for python, and models the responses of redis 6.x or 7.x.</p>"},{"location":"#use-to-test-django-cache","title":"Use to test django cache","text":"<p>Update your cache settings:</p> <pre><code>from fakeredis import FakeConnection\nCACHES = {\n'default': {\n'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n'LOCATION': '...',\n'OPTIONS': {\n'connection_class': FakeConnection\n}\n}\n}\n</code></pre> <p>You can use django <code>@override_settings</code> decorator</p>"},{"location":"#use-to-test-django-rq","title":"Use to test django-rq","text":"<p>There is a need to override <code>django_rq.queues.get_redis_connection</code> with a method returning the same connection.</p> <pre><code>from fakeredis import FakeRedisConnSingleton\ndjango_rq.queues.get_redis_connection = FakeRedisConnSingleton()\n</code></pre>"},{"location":"#known-limitations","title":"Known Limitations","text":"<p>Apart from unimplemented commands, there are a number of cases where fakeredis won't give identical results to real redis. The following are differences that are unlikely to ever be fixed; there are also differences that are fixable (such as commands that do not support all features) which should be filed as bugs in GitHub.</p> <ul> <li>Hyperloglogs are implemented using sets underneath. This means that the   <code>type</code> command will return the wrong answer, you can't use <code>get</code> to retrieve   the encoded value, and counts will be slightly different (they will in fact be   exact).</li> <li> <p>When a command has multiple error conditions, such as operating on a key of   the wrong type and an integer argument is not well-formed, the choice of   error to return may not match redis.</p> </li> <li> <p>The <code>incrbyfloat</code> and <code>hincrbyfloat</code> commands in redis use the C <code>long   double</code> type, which typically has more precision than Python's <code>float</code>   type.</p> </li> <li> <p>Redis makes guarantees about the order in which clients blocked on blocking   commands are woken up. Fakeredis does not honour these guarantees.</p> </li> <li> <p>Where redis contains bugs, fakeredis generally does not try to provide exact   bug-compatibility. It's not practical for fakeredis to try to match the set   of bugs in your specific version of redis.</p> </li> <li> <p>There are a number of cases where the behaviour of redis is undefined, such   as the order of elements returned by set and hash commands. Fakeredis will   generally not produce the same results, and in Python versions before 3.6   may produce different results each time the process is re-run.</p> </li> <li> <p>SCAN/ZSCAN/HSCAN/SSCAN will not necessarily iterate all items if items are   deleted or renamed during iteration. They also won't necessarily iterate in   the same chunk sizes or the same order as redis.</p> </li> <li> <p>DUMP/RESTORE will not return or expect data in the RDB format. Instead, the   <code>pickle</code> module is used to mimic an opaque and non-standard format.   WARNING: Do not use RESTORE with untrusted data, as a malicious pickle   can execute arbitrary code.</p> </li> </ul>"},{"location":"#local-development-environment","title":"Local development environment","text":"<p>To ensure parity with the real redis, there are a set of integration tests that mirror the unittests. For every unittest that is written, the same test is run against a real redis instance using a real redis-py client instance. In order to run these tests you must have a redis server running on localhost, port 6379 (the default settings). WARNING: the tests will completely wipe your database!</p> <p>First install poetry if you don't have it, and then install all the dependencies:</p> <pre><code>pip install poetry\npoetry install\n</code></pre> <p>To run all the tests:</p> <pre><code>poetry run pytest -v\n</code></pre> <p>If you only want to run tests against fake redis, without a real redis::</p> <pre><code>poetry run pytest -m fake\n</code></pre> <p>Because this module is attempting to provide the same interface as <code>redis-py</code>, the python bindings to redis, a reasonable way to test this to take each unittest and run it against a real redis server. fakeredis and the real redis server should give the same result. To run tests against a real redis instance instead:</p> <pre><code>poetry run pytest -m real\n</code></pre> <p>If redis is not running, and you try to run tests against a real redis server, these tests will have a result of 's' for skipped.</p> <p>There are some tests that test redis blocking operations that are somewhat slow. If you want to skip these tests during day to day development, they have all been tagged as 'slow' so you can skip them by running:</p> <pre><code>poetry run pytest -m \"not slow\"\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome. You can contribute in many ways: Open issues for bugs you found, implementing a command which is not yet implemented, implement a test for scenario that is not covered yet, write a guide how to use fakeredis, etc.</p> <p>Please see the contributing guide for more details. If you'd like to help out, you can start with any of the issues labeled with <code>Help wanted</code>.</p> <p>There are guides how to implement a new command and how to write new test cases.</p> <p>New contribution guides are welcome.</p>"},{"location":"#sponsor","title":"Sponsor","text":"<p>fakeredis-py is developed for free.</p> <p>You can support this project by becoming a sponsor using this link.</p> <p>Alternatively, you can buy me coffee using this link: </p>"},{"location":"redis-stack/","title":"Support for redis-stack","text":""},{"location":"redis-stack/#redisjson-support","title":"RedisJson support","text":"<p>Currently, Redis Json module is partially implemented ( see supported commands). Support for JSON commands (eg, <code>JSON.GET</code>) is implemented using jsonpath-ng, you can simply install it using <code>pip install 'fakeredis[json]'</code>.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; from redis.commands.json.path import Path\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis()\n&gt;&gt;&gt; assert r.json().set(\"foo\", Path.root_path(), {\"x\": \"bar\"}, ) == 1\n&gt;&gt;&gt; r.json().get(\"foo\")\n{'x': 'bar'}\n&gt;&gt;&gt; r.json().get(\"foo\", Path(\"x\"))\n'bar'\n</code></pre>"},{"location":"redis-stack/#lua-support","title":"Lua support","text":"<p>If you wish to have Lua scripting support (this includes features like <code>redis.lock.Lock</code>, which are implemented in Lua), you will need lupa, you can simply install it using <code>pip install 'fakeredis[lua]'</code></p>"},{"location":"about/changelog/","title":"Change log","text":""},{"location":"about/changelog/#next-release","title":"Next release","text":""},{"location":"about/changelog/#v2103","title":"v2.10.3","text":""},{"location":"about/changelog/#maintenance","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Support for redis-py 5.0.0b1</li> <li>Include tests in sdist (#133)</li> </ul>"},{"location":"about/changelog/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import used in GenericCommandsMixin.randomkey (#135)</li> </ul>"},{"location":"about/changelog/#v2102","title":"v2.10.2","text":""},{"location":"about/changelog/#bug-fixes_1","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix async_timeout usage on py3.11 (#132)</li> </ul>"},{"location":"about/changelog/#v2101","title":"v2.10.1","text":""},{"location":"about/changelog/#bug-fixes_2","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Enable testing django-cache using <code>FakeConnection</code>.</li> </ul>"},{"location":"about/changelog/#v2100","title":"v2.10.0","text":""},{"location":"about/changelog/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>All geo commands implemented</li> </ul>"},{"location":"about/changelog/#v292","title":"v2.9.2","text":""},{"location":"about/changelog/#bug-fixes_3","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug for <code>xrange</code></li> </ul>"},{"location":"about/changelog/#v291","title":"v2.9.1","text":""},{"location":"about/changelog/#bug-fixes_4","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug for <code>xrevrange</code></li> </ul>"},{"location":"about/changelog/#v290","title":"v2.9.0","text":""},{"location":"about/changelog/#features_1","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>XTRIM</code></li> <li>Add support for <code>MAXLEN</code>, <code>MAXID</code>, <code>LIMIT</code> arguments for <code>XADD</code> command</li> <li>Add support for <code>ZRANGE</code> arguments for <code>ZRANGE</code> command #127</li> </ul>"},{"location":"about/changelog/#maintenance_1","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Relax python version requirement #128</li> </ul>"},{"location":"about/changelog/#v280","title":"v2.8.0","text":""},{"location":"about/changelog/#features_2","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for redis-py 4.5.0 #125</li> </ul>"},{"location":"about/changelog/#bug-fixes_5","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import error for redis-py v3+ #121</li> </ul>"},{"location":"about/changelog/#v271","title":"v2.7.1","text":""},{"location":"about/changelog/#bug-fixes_6","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import error for NoneType #527</li> </ul>"},{"location":"about/changelog/#v270","title":"v2.7.0","text":""},{"location":"about/changelog/#features_3","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.ARRINDEX</code>, <code>JSON.OBJLEN</code>, <code>JSON.OBJKEYS</code> ,   <code>JSON.ARRPOP</code>, <code>JSON.ARRTRIM</code>, <code>JSON.NUMINCRBY</code>, <code>JSON.NUMMULTBY</code>,   <code>XADD</code>, <code>XLEN</code>, <code>XRANGE</code>, <code>XREVRANGE</code></li> </ul>"},{"location":"about/changelog/#maintenance_2","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improve json commands implementation.</li> <li>Improve commands documentation.</li> </ul>"},{"location":"about/changelog/#v260","title":"v2.6.0","text":""},{"location":"about/changelog/#features_4","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.TYPE</code>, <code>JSON.ARRLEN</code> and <code>JSON.ARRAPPEND</code></li> </ul>"},{"location":"about/changelog/#bug-fixes_7","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix encoding of None (#118)</li> </ul>"},{"location":"about/changelog/#maintenance_3","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Start skeleton for streams commands in <code>streams_mixin.py</code> and <code>test_streams_commands.py</code></li> <li>Start migrating documentation to https://fakeredis.readthedocs.io/</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.5.0...v2.6.0</p>"},{"location":"about/changelog/#v250","title":"v2.5.0","text":""},{"location":"about/changelog/#features_5","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement support for <code>BITPOS</code> (bitmap command) (#112)</li> </ul>"},{"location":"about/changelog/#bug-fixes_8","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix json mget when dict is returned (#114)</li> <li>fix: properly export (#116)</li> </ul>"},{"location":"about/changelog/#maintenance_4","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Extract param handling (#113)</li> </ul>"},{"location":"about/changelog/#contributors","title":"Contributors","text":"<p>We'd like to thank all the contributors who worked on this release!</p> <p>@Meemaw, @Pichlerdom</p> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.4.0...v2.5.0</p>"},{"location":"about/changelog/#v240","title":"v2.4.0","text":""},{"location":"about/changelog/#features_6","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>LCS</code> (#111), <code>BITOP</code> (#110)</li> </ul>"},{"location":"about/changelog/#bug-fixes_9","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug checking type in scan_iter (#109)</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.3.0...v2.4.0</p>"},{"location":"about/changelog/#v230","title":"v2.3.0","text":""},{"location":"about/changelog/#features_7","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>GETEX</code> (#102)</li> <li>Implement support for <code>JSON.STRAPPEND</code> (json command) (#98)</li> <li>Implement <code>JSON.STRLEN</code>, <code>JSON.TOGGLE</code> and fix bugs with <code>JSON.DEL</code> (#96)</li> <li>Implement <code>PUBSUB CHANNELS</code>, <code>PUBSUB NUMSUB</code></li> </ul>"},{"location":"about/changelog/#bug-fixes_10","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ZADD with XX \\&amp; GT allows updates with lower scores (#105)</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.2.0...v2.3.0</p>"},{"location":"about/changelog/#v220","title":"v2.2.0","text":""},{"location":"about/changelog/#features_8","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.CLEAR</code> (#87)</li> <li>Support for redis-py v4.4.0</li> </ul>"},{"location":"about/changelog/#maintenance_5","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Implement script to create issues for missing commands</li> <li>Remove checking for deprecated redis-py versions in tests</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.1.0...v2.2.0</p>"},{"location":"about/changelog/#v210","title":"v2.1.0","text":""},{"location":"about/changelog/#features_9","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement json.mget (#85)</li> <li>Initial json module support - <code>JSON.GET</code>, <code>JSON.SET</code> and <code>JSON.DEL</code> (#80)</li> </ul>"},{"location":"about/changelog/#bug-fixes_11","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>fix: add nowait for asyncio disconnect (#76)</li> </ul>"},{"location":"about/changelog/#maintenance_6","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Refactor how commands are registered (#79)</li> <li>Refactor tests from redispy4_plus (#77)</li> </ul>"},{"location":"about/changelog/#contributors_1","title":"Contributors","text":"<p>We'd like to thank all the contributors who worked on this release!</p> <p>@hyeongguen-song, @the-wondersmith</p> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.0.0...v2.1.0</p>"},{"location":"about/changelog/#v200","title":"v2.0.0","text":""},{"location":"about/changelog/#breaking-changes","title":"\ud83d\ude80 Breaking changes","text":"<ul> <li>Remove support for aioredis separate from redis-py (redis-py versions 4.1.2 and below). (#65)</li> </ul>"},{"location":"about/changelog/#features_10","title":"\ud83d\ude80 Features","text":"<ul> <li>Add support for redis-py v4.4rc4 (#73)</li> <li>Add mypy support  (#74)</li> </ul>"},{"location":"about/changelog/#maintenance_7","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Separate commands to mixins (#71)</li> <li>Use release-drafter</li> <li>Update GitHub workflows</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.10.1...v2.0.0</p>"},{"location":"about/changelog/#v1101","title":"v1.10.1","text":""},{"location":"about/changelog/#whats-changed","title":"What's Changed","text":"<ul> <li>Implement support for <code>zmscore</code> by @the-wondersmith in #67</li> </ul>"},{"location":"about/changelog/#new-contributors","title":"New Contributors","text":"<ul> <li>@the-wondersmith made their first contribution in #67</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.10.0...v1.10.1</p>"},{"location":"about/changelog/#v1100","title":"v1.10.0","text":""},{"location":"about/changelog/#whats-changed_1","title":"What's Changed","text":"<ul> <li>implement <code>GETDEL</code> and <code>SINTERCARD</code> support in #57</li> <li>Test get float-type behavior in #59</li> <li>Implement <code>BZPOPMIN</code>/<code>BZPOPMAX</code> support in #60</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.4...v1.10.0</p>"},{"location":"about/changelog/#v194","title":"v1.9.4","text":""},{"location":"about/changelog/#whats-changed_2","title":"What's Changed","text":"<ul> <li>Separate LUA support to a different file in #55 Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.3...v1.9.4</li> </ul>"},{"location":"about/changelog/#v193","title":"v1.9.3","text":""},{"location":"about/changelog/#changed","title":"Changed","text":"<ul> <li>Removed python-six dependency</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.2...v1.9.3</p>"},{"location":"about/changelog/#v192","title":"v1.9.2","text":""},{"location":"about/changelog/#whats-changed_3","title":"What's Changed","text":"<ul> <li>zadd support for GT/LT in #49</li> <li>Remove six dependency in #51</li> <li>Add host to <code>conn_pool_args</code>  in #51</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.1...v1.9.2</p>"},{"location":"about/changelog/#v191","title":"v1.9.1","text":""},{"location":"about/changelog/#whats-changed_4","title":"What's Changed","text":"<ul> <li>Zrange byscore in #44</li> <li>Expire options in #46</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.0...v1.9.1</p>"},{"location":"about/changelog/#v190","title":"v1.9.0","text":""},{"location":"about/changelog/#whats-changed_5","title":"What's Changed","text":"<ul> <li>Enable redis7 support in #42</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.8.2...v1.9.0</p>"},{"location":"about/changelog/#v182","title":"v1.8.2","text":""},{"location":"about/changelog/#whats-changed_6","title":"What's Changed","text":"<ul> <li>Update publish GitHub action to create an issue on failure by @terencehonles   in #33</li> <li>Add release draft job in #37</li> <li>Fix input and output type of cursors for SCAN commands by @tohin   in #40</li> <li>Fix passing params in args - Fix #36 in #41</li> </ul>"},{"location":"about/changelog/#new-contributors_1","title":"New Contributors","text":"<ul> <li>@tohin made their first contribution in #40</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.8.1...v1.8.2</p>"},{"location":"about/changelog/#v181","title":"v1.8.1","text":""},{"location":"about/changelog/#whats-changed_7","title":"What's Changed","text":"<ul> <li>fix: allow redis 4.3.* by @terencehonles in #30</li> </ul>"},{"location":"about/changelog/#new-contributors_2","title":"New Contributors","text":"<ul> <li>@terencehonles made their first contribution in #30</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.8...v1.8.1</p>"},{"location":"about/changelog/#v18","title":"v1.8","text":""},{"location":"about/changelog/#whats-changed_8","title":"What's Changed","text":"<ul> <li>Fix handling url with username and password in #27</li> <li>Refactor tests in #28</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.6.1...v1.8</p>"},{"location":"about/changelog/#v1761","title":"v1.7.6.1","text":""},{"location":"about/changelog/#whats-changed_9","title":"What's Changed","text":"<ul> <li>23 - Re-add dependencies lost during switch to poetry by @xkortex   in #26</li> </ul>"},{"location":"about/changelog/#new-contributors_3","title":"New Contributors","text":"<ul> <li>@xkortex made their first contribution in https://github.com/dsoftwareinc/fakeredis-py/pull/26</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.6...v1.7.6.1</p>"},{"location":"about/changelog/#v176","title":"v1.7.6","text":""},{"location":"about/changelog/#added","title":"Added","text":"<ul> <li>add IMOVE operation by @BGroever in #11</li> <li>Add SMISMEMBER command by @OlegZv in #20</li> </ul>"},{"location":"about/changelog/#removed","title":"Removed","text":"<ul> <li>Remove Python 3.7 by @nzw0301 in #8</li> </ul>"},{"location":"about/changelog/#whats-changed_10","title":"What's Changed","text":"<ul> <li>fix: work with redis.asyncio by @zhongkechen in #10</li> <li>Migrate to poetry in #12</li> <li>Create annotation for redis4+ tests in #14</li> <li>Make aioredis and lupa optional dependencies in #16</li> <li>Remove aioredis requirement if redis-py 4.2+ by @ikornaselur   in #19</li> </ul>"},{"location":"about/changelog/#new-contributors_4","title":"New Contributors","text":"<ul> <li>@nzw0301 made their first contribution in #8</li> <li>@zhongkechen made their first contribution in #10</li> <li>@BGroever made their first contribution in #11</li> <li>@ikornaselur made their first contribution in #19</li> <li>@OlegZv made their first contribution in #20</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.5...v1.7.6</p>"},{"location":"about/changelog/#thanks-to-our-sponsors-this-month","title":"Thanks to our sponsors this month","text":"<ul> <li>@beatgeek</li> </ul>"},{"location":"about/changelog/#v175","title":"v1.7.5","text":""},{"location":"about/changelog/#whats-changed_11","title":"What's Changed","text":"<ul> <li>Fix python3.8 redis4.2+ issue in #6</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.4...v1.7.5</p>"},{"location":"about/changelog/#v174","title":"v1.7.4","text":""},{"location":"about/changelog/#whats-changed_12","title":"What's Changed","text":"<ul> <li>Support for python3.8 in #1</li> <li>Feature/publish action in #2</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/1.7.1...v1.7.4</p>"},{"location":"about/contributing/","title":"Contributing to fakeredis","text":"<p>First off, thanks for taking the time to contribute! \u2764\ufe0f</p> <p>All types of contributions are encouraged and valued. See the Table of Contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89</p> <p>And if you like the project, but just don't have time to contribute, that's fine.  There are other easy ways to support the project and show your appreciation, which we would also be very happy about:</p> <ul> <li>Star the project</li> <li>Tweet about it</li> <li>Refer this project in your project's readme</li> <li>Mention the project at local meetups and tell your friends/colleagues</li> </ul>"},{"location":"about/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the fakeredis Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to daniel.maruani@gmail.com.</p>"},{"location":"about/contributing/#i-have-a-question","title":"I Have a Question","text":"<p>If you want to ask a question, we assume that you have read the available Documentation.</p> <p>Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first.</p> <p>If you then still feel the need to ask a question and need clarification, we recommend the following:</p> <ul> <li>Open an Issue.</li> <li>Provide as much context as you can about what you're running into.</li> <li>Provide project and platform versions (nodejs, npm, etc), depending on what seems relevant.</li> </ul> <p>We will then take care of the issue as soon as possible.</p>"},{"location":"about/contributing/#i-want-to-contribute","title":"I Want To Contribute","text":""},{"location":"about/contributing/#legal-notice","title":"Legal Notice","text":"<p>When contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license.</p>"},{"location":"about/contributing/#reporting-bugs","title":"Reporting Bugs","text":""},{"location":"about/contributing/#before-submitting-a-bug-report","title":"Before Submitting a Bug Report","text":"<p>A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible.</p> <ul> <li>Make sure that you are using the latest version.</li> <li>Determine if your bug is really a bug and not an error on your side e.g. using incompatible   environment components/versions (Make sure that you have read the documentation.   If you are looking for support, you might want to check this section).</li> <li>To see if other users have experienced (and potentially already solved) the same issue you are having,   check if there is not already a bug report existing for your bug or error in the bug tracker.</li> <li>Also make sure to search the internet (including Stack Overflow) to see if users outside the GitHub   community have discussed the issue.</li> <li>Collect information about the bug:</li> <li>Stack trace (Traceback)</li> <li>OS, Platform and Version (Windows, Linux, macOS, x86, ARM)</li> <li>Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant.</li> <li>Possibly your input and the output</li> <li>Can you reliably reproduce the issue? And can you also reproduce it with older versions?</li> </ul>"},{"location":"about/contributing/#how-do-i-submit-a-good-bug-report","title":"How Do I Submit a Good Bug Report?","text":"<p>You must never report security related issues, vulnerabilities or bugs including sensitive information to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to daniel.maruani@gmail.com.</p> <p>We use GitHub issues to track bugs and errors. If you run into an issue with the project:</p> <ul> <li>Open an Issue.   (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and   not to label the issue.)</li> <li>Follow the issue template and provide as much context as possible and describe the reproduction steps that someone else can follow to recreate the issue on their own.   This usually includes your code.   For good bug reports you should isolate the problem and create a reduced test case.</li> <li>Provide the information you collected in the previous section.</li> </ul> <p>Once it's filed:</p> <ul> <li>The project team will label the issue accordingly.</li> <li>A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as <code>needs-repro</code>. Bugs with the <code>needs-repro</code> tag will not be addressed until they are reproduced.</li> <li>If the team is able to reproduce the issue, it will be marked <code>needs-fix</code>, as well as possibly other tags (such as <code>critical</code>), and the issue will be left to be implemented by someone.</li> </ul>"},{"location":"about/contributing/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>This section guides you through submitting an enhancement suggestion for fakeredis, including completely new features and minor improvements to existing functionality. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.</p>"},{"location":"about/contributing/#before-submitting-an-enhancement","title":"Before Submitting an Enhancement","text":"<ul> <li>Make sure that you are using the latest version.</li> <li>Read the documentation carefully and find out if the functionality is already covered, maybe by an individual configuration.</li> <li>Perform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.</li> <li>Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.</li> </ul>"},{"location":"about/contributing/#how-do-i-submit-a-good-enhancement-suggestion","title":"How Do I Submit a Good Enhancement Suggestion?","text":"<p>Enhancement suggestions are tracked as GitHub issues.</p> <ul> <li>Use a clear and descriptive title for the issue to identify the suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as many details as possible.</li> <li>Describe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you.</li> <li>You may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. </li> <li>Explain why this enhancement would be useful to most fakeredis users. You may also want to point out the other projects that solved it better and which could serve as inspiration.</li> </ul>"},{"location":"about/contributing/#your-first-code-contribution","title":"Your First Code Contribution","text":"<p>Unsure where to begin contributing? You can start by looking through help-wanted issues.</p> <p>Never contributed to open source before? Here are a couple of friendly tutorials:</p> <ul> <li>http://makeapullrequest.com/</li> <li>http://www.firsttimersonly.com/</li> </ul>"},{"location":"about/contributing/#getting-started","title":"Getting started","text":"<ul> <li>Create your own fork of the repository</li> <li>Do the changes in your fork</li> <li>Setup poetry <code>pip install poetry</code></li> <li>Let poetry install everything required for a local environment <code>poetry install</code></li> <li>To run all tests, use: <code>poetry run pytest -v</code></li> <li>Note: In order to run the tests, a real redis server should be running.   The tests are comparing the results of each command between fakeredis and a real redis.</li> <li>You can use <code>docker-compose up redis6</code> or <code>docker-compose up redis7</code> to run redis.</li> <li>Run test with coverage using <code>poetry run pytest -v --cov=fakeredis --cov-branch</code>   and then you can run <code>coverage report</code>.</li> </ul>"},{"location":"about/contributing/#improving-the-documentation","title":"Improving The Documentation","text":"<ul> <li>Create your own fork of the repository</li> <li>Do the changes in your fork, probably in <code>README.md</code></li> <li>Create a pull request with the changes.</li> </ul>"},{"location":"about/contributing/#styleguides","title":"Styleguides","text":""},{"location":"about/contributing/#commit-messages","title":"Commit Messages","text":"<p>Taken from The seven rules of a great Git commit message:</p> <ol> <li>Separate subject from body with a blank line</li> <li>Limit the subject line to 50 characters</li> <li>Capitalize the subject line</li> <li>Do not end the subject line with a period</li> <li>Use the imperative mood in the subject line</li> <li>Wrap the body at 72 characters</li> <li>Use the body to explain what and why vs. how</li> </ol>"},{"location":"about/contributing/#join-the-project-team","title":"Join The Project Team","text":"<p>If you wish to be added to the project team as a collaborator, please send  a message to daniel.maruani@gmail.com with explanation.</p>"},{"location":"about/contributing/#attribution","title":"Attribution","text":"<p>This guide is based on the contributing-gen. Make your own!</p>"},{"location":"about/license/","title":"License","text":"<p>The legal stuff.</p> <p>BSD 3-Clause License</p> <p>Copyright \u00a9 2022-, Daniel Moran, 2017-2018, Bruce Merry, 2011 James Saryerwinnie, All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright notice, this    list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice,    this list of conditions and the following disclaimer in the documentation    and/or other materials provided with the distribution.</p> </li> <li> <p>Neither the name of the copyright holder nor the names of its    contributors may be used to endorse or promote products derived from    this software without specific prior written permission.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"guides/implement-command/","title":"Implementing support for a command","text":"<p>Creating a new command support should be done in the <code>FakeSocket</code> class (in <code>_fakesocket.py</code>) by creating the method and using <code>@command</code> decorator (which should be the command syntax, you can use existing samples on the file).</p> <p>For example:</p> <pre><code>class FakeSocket(BaseFakeSocket, FakeLuaSocket):\n# ...\n@command(name='zscore', fixed=(Key(ZSet), bytes), repeat=(), flags=[])\ndef zscore(self, key, member):\ntry:\nreturn self._encodefloat(key.value[member], False)\nexcept KeyError:\nreturn None\n</code></pre>"},{"location":"guides/implement-command/#parsing-command-arguments","title":"Parsing command arguments","text":"<p>The <code>extract_args</code> method should help extracting arguments from <code>*args</code>.  It extracts from actual arguments which arguments exist and their value if relevant.</p> <p>Parameters <code>extract_args</code> expect: - <code>actual_args</code>     The actual arguments to parse - <code>expected</code>     Arguments to look for, see below explanation. - <code>error_on_unexpected</code> (default: True)     Should an error be raised when actual_args contain an unexpected argument? - <code>left_from_first_unexpected</code> (default: True)     Once reaching an unexpected argument in actual_args,     Should parsing stop?</p> <p>It returns two lists: - List of values for expected arguments. - List of remaining args.</p>"},{"location":"guides/implement-command/#expected-argument-structure","title":"Expected argument structure:","text":"<ul> <li>If expected argument has only a name, it will be parsed as boolean   (Whether it exists in actual <code>*args</code> or not).</li> <li>In order to parse a numerical value following the expected argument,   a <code>+</code> prefix is needed, e.g., <code>+px</code> will parse <code>args=('px', '1')</code> as <code>px=1</code></li> <li>In order to parse a string value following the expected argument,   a <code>*</code> prefix is needed, e.g., <code>*type</code> will parse <code>args=('type', 'number')</code> as <code>type='number'</code></li> <li>You can have more than one <code>+</code>/<code>*</code>, e.g., <code>++limit</code> will parse <code>args=('limit','1','10')</code>   as <code>limit=(1,10)</code></li> </ul>"},{"location":"guides/implement-command/#how-to-use-command-decorator","title":"How to use <code>@command</code> decorator","text":"<p>The <code>@command</code> decorator register the method as a redis command and define the accepted format for it. It will create a <code>Signature</code> instance for the command. Whenever the command is triggered, the <code>Signature.apply(..)</code> method will be triggered to check the validity of syntax and analyze the command arguments.</p> <p>By default, it takes the name of the method as the command name.</p> <p>If the method implements a subcommand (eg, <code>SCRIPT LOAD</code>), a Redis module command (eg, <code>JSON.GET</code>), or a python reserve word where you can not use it as the method name (eg, <code>EXEC</code>), then you can supply explicitly the name parameter.</p> <p>If the command implemented require certain arguments, they can be supplied in the first parameter as a tuple. When receiving the command through the socket, the bytes will be converted to the argument types supplied or remain as <code>bytes</code>.</p> <p>Argument types (All in <code>_commands.py</code>):</p> <ul> <li><code>Key(KeyType)</code> - Will get from the DB the key and validate its value is of <code>KeyType</code> (if <code>KeyType</code> is supplied).   It will generate a <code>CommandItem</code> from it which provides access to the database value.</li> <li><code>Int</code> - Decode the <code>bytes</code> to <code>int</code> and vice versa.</li> <li><code>DbIndex</code>/<code>BitOffset</code>/<code>BitValue</code>/<code>Timeout</code> - Basically the same behavior as <code>Int</code>, but with different messages when   encode/decode fail.</li> <li><code>Hash</code> - dictionary, usually describe the type of value stored in Key <code>Key(Hash)</code></li> <li><code>Float</code> - Encode/Decode <code>bytes</code> &lt;-&gt; <code>float</code></li> <li><code>SortFloat</code> - Similar to <code>Float</code> with different error messages.</li> <li><code>ScoreTest</code> - Argument converter for sorted set score endpoints.</li> <li><code>StringTest</code> - Argument converter for sorted set endpoints (lex).</li> <li><code>ZSet</code> - Sorted Set.</li> </ul>"},{"location":"guides/implement-command/#implement-a-test-for-it","title":"Implement a test for it","text":"<p>There are multiple scenarios for test, with different versions of redis server, redis-py, etc. The tests not only assert the validity of output but runs the same test on a real redis-server and compares the output to the real server output.</p> <ul> <li>Create tests in the relevant test file.</li> <li>If support for the command was introduced in a certain version of redis-py (   see redis-py release notes) you can use the   decorator <code>@testtools.run_test_if_redispy_ver</code> on your tests. example:</li> </ul> <pre><code>@testtools.run_test_if_redispy_ver('above', '4.2.0')  # This will run for redis-py 4.2.0 or above.\ndef test_expire_should_not_expire__when_no_expire_is_set(r):\nr.set('foo', 'bar')\nassert r.get('foo') == b'bar'\nassert r.expire('foo', 1, xx=True) == 0\n</code></pre>"},{"location":"guides/implement-command/#updating-documentation","title":"Updating documentation","text":"<p>Lastly, run from the root of the project the script to regenerate documentation for supported and unsupported commands:</p> <pre><code>python scripts/supported.py    </code></pre> <p>Include the changes in the <code>docs/</code> directory in your pull request.</p>"},{"location":"guides/test-case/","title":"Write a new test case","text":"<p>There are multiple scenarios for test, with different versions of python, redis-py and redis server, etc. The tests not only assert the validity of the expected output with FakeRedis but also with a real redis server. That way parity of real Redis and FakeRedis is ensured.</p> <p>To write a new test case for a command:</p> <ul> <li>Determine which mixin the command belongs to and the test file for   the mixin (eg, <code>string_mixin.py</code> =&gt; <code>test_string_commands.py</code>).</li> <li>Tests should support python 3.7 and above.</li> <li>Determine when support for the command was introduced<ul> <li>To limit the redis-server versions it will run on use:   <code>@pytest.mark.max_server(version)</code> and <code>@pytest.mark.min_server(version)</code></li> <li>To limit the redis-py version use <code>@run_test_if_redispy_ver(above/below, version)</code></li> </ul> </li> <li>pytest will inject a redis connection to the argument <code>r</code> of the test.</li> </ul> <p>Sample of running a test for redis-py v4.2.0 and above, redis-server 7.0 and above.</p> <pre><code>@pytest.mark.min_server('7')\n@testtools.run_test_if_redispy_ver('above', '4.2.0')\ndef test_expire_should_not_expire__when_no_expire_is_set(r):\nr.set('foo', 'bar')\nassert r.get('foo') == b'bar'\nassert r.expire('foo', 1, xx=True) == 0\n</code></pre>"},{"location":"redis-commands/Redis/","title":"Redis commands","text":""},{"location":"redis-commands/Redis/#server-commands","title":"server commands","text":""},{"location":"redis-commands/Redis/#bgsave","title":"BGSAVE","text":"<p>Asynchronously save the dataset to disk</p>"},{"location":"redis-commands/Redis/#dbsize","title":"DBSIZE","text":"<p>Return the number of keys in the selected database</p>"},{"location":"redis-commands/Redis/#flushall","title":"FLUSHALL","text":"<p>Remove all keys from all databases</p>"},{"location":"redis-commands/Redis/#flushdb","title":"FLUSHDB","text":"<p>Remove all keys from the current database</p>"},{"location":"redis-commands/Redis/#lastsave","title":"LASTSAVE","text":"<p>Get the UNIX time stamp of the last successful save to disk</p>"},{"location":"redis-commands/Redis/#save","title":"SAVE","text":"<p>Synchronously save the dataset to disk</p>"},{"location":"redis-commands/Redis/#swapdb","title":"SWAPDB","text":"<p>Swaps two Redis databases</p>"},{"location":"redis-commands/Redis/#time","title":"TIME","text":"<p>Return the current server time</p>"},{"location":"redis-commands/Redis/#unsupported-server-commands","title":"Unsupported server commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#acl-not-implemented","title":"ACL (not implemented)","text":"<p>A container for Access List Control commands </p>"},{"location":"redis-commands/Redis/#acl-cat-not-implemented","title":"ACL CAT (not implemented)","text":"<p>List the ACL categories or the commands inside a category</p>"},{"location":"redis-commands/Redis/#acl-deluser-not-implemented","title":"ACL DELUSER (not implemented)","text":"<p>Remove the specified ACL users and the associated rules</p>"},{"location":"redis-commands/Redis/#acl-dryrun-not-implemented","title":"ACL DRYRUN (not implemented)","text":"<p>Returns whether the user can execute the given command without executing the command.</p>"},{"location":"redis-commands/Redis/#acl-genpass-not-implemented","title":"ACL GENPASS (not implemented)","text":"<p>Generate a pseudorandom secure password to use for ACL users</p>"},{"location":"redis-commands/Redis/#acl-getuser-not-implemented","title":"ACL GETUSER (not implemented)","text":"<p>Get the rules for a specific ACL user</p>"},{"location":"redis-commands/Redis/#acl-help-not-implemented","title":"ACL HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#acl-list-not-implemented","title":"ACL LIST (not implemented)","text":"<p>List the current ACL rules in ACL config file format</p>"},{"location":"redis-commands/Redis/#acl-load-not-implemented","title":"ACL LOAD (not implemented)","text":"<p>Reload the ACLs from the configured ACL file</p>"},{"location":"redis-commands/Redis/#acl-log-not-implemented","title":"ACL LOG (not implemented)","text":"<p>List latest events denied because of ACLs in place</p>"},{"location":"redis-commands/Redis/#acl-save-not-implemented","title":"ACL SAVE (not implemented)","text":"<p>Save the current ACL rules in the configured ACL file</p>"},{"location":"redis-commands/Redis/#acl-setuser-not-implemented","title":"ACL SETUSER (not implemented)","text":"<p>Modify or create the rules for a specific ACL user</p>"},{"location":"redis-commands/Redis/#acl-users-not-implemented","title":"ACL USERS (not implemented)","text":"<p>List the username of all the configured ACL rules</p>"},{"location":"redis-commands/Redis/#acl-whoami-not-implemented","title":"ACL WHOAMI (not implemented)","text":"<p>Return the name of the user associated to the current connection</p>"},{"location":"redis-commands/Redis/#bgrewriteaof-not-implemented","title":"BGREWRITEAOF (not implemented)","text":"<p>Asynchronously rewrite the append-only file</p>"},{"location":"redis-commands/Redis/#command-not-implemented","title":"COMMAND (not implemented)","text":"<p>Get array of Redis command details</p>"},{"location":"redis-commands/Redis/#command-count-not-implemented","title":"COMMAND COUNT (not implemented)","text":"<p>Get total number of Redis commands</p>"},{"location":"redis-commands/Redis/#command-docs-not-implemented","title":"COMMAND DOCS (not implemented)","text":"<p>Get array of specific Redis command documentation</p>"},{"location":"redis-commands/Redis/#command-getkeys-not-implemented","title":"COMMAND GETKEYS (not implemented)","text":"<p>Extract keys given a full Redis command</p>"},{"location":"redis-commands/Redis/#command-getkeysandflags-not-implemented","title":"COMMAND GETKEYSANDFLAGS (not implemented)","text":"<p>Extract keys and access flags given a full Redis command</p>"},{"location":"redis-commands/Redis/#command-help-not-implemented","title":"COMMAND HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#command-info-not-implemented","title":"COMMAND INFO (not implemented)","text":"<p>Get array of specific Redis command details, or all when no argument is given.</p>"},{"location":"redis-commands/Redis/#command-list-not-implemented","title":"COMMAND LIST (not implemented)","text":"<p>Get an array of Redis command names</p>"},{"location":"redis-commands/Redis/#config-not-implemented","title":"CONFIG (not implemented)","text":"<p>A container for server configuration commands</p>"},{"location":"redis-commands/Redis/#config-get-not-implemented","title":"CONFIG GET (not implemented)","text":"<p>Get the values of configuration parameters</p>"},{"location":"redis-commands/Redis/#config-help-not-implemented","title":"CONFIG HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#config-resetstat-not-implemented","title":"CONFIG RESETSTAT (not implemented)","text":"<p>Reset the stats returned by INFO</p>"},{"location":"redis-commands/Redis/#config-rewrite-not-implemented","title":"CONFIG REWRITE (not implemented)","text":"<p>Rewrite the configuration file with the in memory configuration</p>"},{"location":"redis-commands/Redis/#config-set-not-implemented","title":"CONFIG SET (not implemented)","text":"<p>Set configuration parameters to the given values</p>"},{"location":"redis-commands/Redis/#debug-not-implemented","title":"DEBUG (not implemented)","text":"<p>A container for debugging commands</p>"},{"location":"redis-commands/Redis/#failover-not-implemented","title":"FAILOVER (not implemented)","text":"<p>Start a coordinated failover between this server and one of its replicas.</p>"},{"location":"redis-commands/Redis/#info-not-implemented","title":"INFO (not implemented)","text":"<p>Get information and statistics about the server</p>"},{"location":"redis-commands/Redis/#latency-not-implemented","title":"LATENCY (not implemented)","text":"<p>A container for latency diagnostics commands</p>"},{"location":"redis-commands/Redis/#latency-doctor-not-implemented","title":"LATENCY DOCTOR (not implemented)","text":"<p>Return a human readable latency analysis report.</p>"},{"location":"redis-commands/Redis/#latency-graph-not-implemented","title":"LATENCY GRAPH (not implemented)","text":"<p>Return a latency graph for the event.</p>"},{"location":"redis-commands/Redis/#latency-help-not-implemented","title":"LATENCY HELP (not implemented)","text":"<p>Show helpful text about the different subcommands.</p>"},{"location":"redis-commands/Redis/#latency-histogram-not-implemented","title":"LATENCY HISTOGRAM (not implemented)","text":"<p>Return the cumulative distribution of latencies of a subset of commands or all.</p>"},{"location":"redis-commands/Redis/#latency-history-not-implemented","title":"LATENCY HISTORY (not implemented)","text":"<p>Return timestamp-latency samples for the event.</p>"},{"location":"redis-commands/Redis/#latency-latest-not-implemented","title":"LATENCY LATEST (not implemented)","text":"<p>Return the latest latency samples for all events.</p>"},{"location":"redis-commands/Redis/#latency-reset-not-implemented","title":"LATENCY RESET (not implemented)","text":"<p>Reset latency data for one or more events.</p>"},{"location":"redis-commands/Redis/#lolwut-not-implemented","title":"LOLWUT (not implemented)","text":"<p>Display some computer art and the Redis version</p>"},{"location":"redis-commands/Redis/#memory-not-implemented","title":"MEMORY (not implemented)","text":"<p>A container for memory diagnostics commands</p>"},{"location":"redis-commands/Redis/#memory-doctor-not-implemented","title":"MEMORY DOCTOR (not implemented)","text":"<p>Outputs memory problems report</p>"},{"location":"redis-commands/Redis/#memory-help-not-implemented","title":"MEMORY HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#memory-malloc-stats-not-implemented","title":"MEMORY MALLOC-STATS (not implemented)","text":"<p>Show allocator internal stats</p>"},{"location":"redis-commands/Redis/#memory-purge-not-implemented","title":"MEMORY PURGE (not implemented)","text":"<p>Ask the allocator to release memory</p>"},{"location":"redis-commands/Redis/#memory-stats-not-implemented","title":"MEMORY STATS (not implemented)","text":"<p>Show memory usage details</p>"},{"location":"redis-commands/Redis/#memory-usage-not-implemented","title":"MEMORY USAGE (not implemented)","text":"<p>Estimate the memory usage of a key</p>"},{"location":"redis-commands/Redis/#module-not-implemented","title":"MODULE (not implemented)","text":"<p>A container for module commands</p>"},{"location":"redis-commands/Redis/#module-help-not-implemented","title":"MODULE HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#module-list-not-implemented","title":"MODULE LIST (not implemented)","text":"<p>List all modules loaded by the server</p>"},{"location":"redis-commands/Redis/#module-load-not-implemented","title":"MODULE LOAD (not implemented)","text":"<p>Load a module</p>"},{"location":"redis-commands/Redis/#module-loadex-not-implemented","title":"MODULE LOADEX (not implemented)","text":"<p>Load a module with extended parameters</p>"},{"location":"redis-commands/Redis/#module-unload-not-implemented","title":"MODULE UNLOAD (not implemented)","text":"<p>Unload a module</p>"},{"location":"redis-commands/Redis/#monitor-not-implemented","title":"MONITOR (not implemented)","text":"<p>Listen for all requests received by the server in real time</p>"},{"location":"redis-commands/Redis/#psync-not-implemented","title":"PSYNC (not implemented)","text":"<p>Internal command used for replication</p>"},{"location":"redis-commands/Redis/#replconf-not-implemented","title":"REPLCONF (not implemented)","text":"<p>An internal command for configuring the replication stream</p>"},{"location":"redis-commands/Redis/#replicaof-not-implemented","title":"REPLICAOF (not implemented)","text":"<p>Make the server a replica of another instance, or promote it as master.</p>"},{"location":"redis-commands/Redis/#restore-asking-not-implemented","title":"RESTORE-ASKING (not implemented)","text":"<p>An internal command for migrating keys in a cluster</p>"},{"location":"redis-commands/Redis/#role-not-implemented","title":"ROLE (not implemented)","text":"<p>Return the role of the instance in the context of replication</p>"},{"location":"redis-commands/Redis/#shutdown-not-implemented","title":"SHUTDOWN (not implemented)","text":"<p>Synchronously save the dataset to disk and then shut down the server</p>"},{"location":"redis-commands/Redis/#slaveof-not-implemented","title":"SLAVEOF (not implemented)","text":"<p>Make the server a replica of another instance, or promote it as master.</p>"},{"location":"redis-commands/Redis/#slowlog-not-implemented","title":"SLOWLOG (not implemented)","text":"<p>A container for slow log commands</p>"},{"location":"redis-commands/Redis/#slowlog-get-not-implemented","title":"SLOWLOG GET (not implemented)","text":"<p>Get the slow log's entries</p>"},{"location":"redis-commands/Redis/#slowlog-help-not-implemented","title":"SLOWLOG HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#slowlog-len-not-implemented","title":"SLOWLOG LEN (not implemented)","text":"<p>Get the slow log's length</p>"},{"location":"redis-commands/Redis/#slowlog-reset-not-implemented","title":"SLOWLOG RESET (not implemented)","text":"<p>Clear all entries from the slow log</p>"},{"location":"redis-commands/Redis/#sync-not-implemented","title":"SYNC (not implemented)","text":"<p>Internal command used for replication</p>"},{"location":"redis-commands/Redis/#string-commands","title":"string commands","text":""},{"location":"redis-commands/Redis/#append","title":"APPEND","text":"<p>Append a value to a key</p>"},{"location":"redis-commands/Redis/#decr","title":"DECR","text":"<p>Decrement the integer value of a key by one</p>"},{"location":"redis-commands/Redis/#decrby","title":"DECRBY","text":"<p>Decrement the integer value of a key by the given number</p>"},{"location":"redis-commands/Redis/#get","title":"GET","text":"<p>Get the value of a key</p>"},{"location":"redis-commands/Redis/#getdel","title":"GETDEL","text":"<p>Get the value of a key and delete the key</p>"},{"location":"redis-commands/Redis/#getex","title":"GETEX","text":"<p>Get the value of a key and optionally set its expiration</p>"},{"location":"redis-commands/Redis/#getrange","title":"GETRANGE","text":"<p>Get a substring of the string stored at a key</p>"},{"location":"redis-commands/Redis/#getset","title":"GETSET","text":"<p>Set the string value of a key and return its old value</p>"},{"location":"redis-commands/Redis/#incr","title":"INCR","text":"<p>Increment the integer value of a key by one</p>"},{"location":"redis-commands/Redis/#incrby","title":"INCRBY","text":"<p>Increment the integer value of a key by the given amount</p>"},{"location":"redis-commands/Redis/#incrbyfloat","title":"INCRBYFLOAT","text":"<p>Increment the float value of a key by the given amount</p>"},{"location":"redis-commands/Redis/#lcs","title":"LCS","text":"<p>Find longest common substring</p>"},{"location":"redis-commands/Redis/#mget","title":"MGET","text":"<p>Get the values of all the given keys</p>"},{"location":"redis-commands/Redis/#mset","title":"MSET","text":"<p>Set multiple keys to multiple values</p>"},{"location":"redis-commands/Redis/#msetnx","title":"MSETNX","text":"<p>Set multiple keys to multiple values, only if none of the keys exist</p>"},{"location":"redis-commands/Redis/#psetex","title":"PSETEX","text":"<p>Set the value and expiration in milliseconds of a key</p>"},{"location":"redis-commands/Redis/#set","title":"SET","text":"<p>Set the string value of a key</p>"},{"location":"redis-commands/Redis/#setex","title":"SETEX","text":"<p>Set the value and expiration of a key</p>"},{"location":"redis-commands/Redis/#setnx","title":"SETNX","text":"<p>Set the value of a key, only if the key does not exist</p>"},{"location":"redis-commands/Redis/#setrange","title":"SETRANGE","text":"<p>Overwrite part of a string at key starting at the specified offset</p>"},{"location":"redis-commands/Redis/#strlen","title":"STRLEN","text":"<p>Get the length of the value stored in a key</p>"},{"location":"redis-commands/Redis/#substr","title":"SUBSTR","text":"<p>Get a substring of the string stored at a key</p>"},{"location":"redis-commands/Redis/#unsupported-string-commands","title":"Unsupported string commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#unsupported-cluster-commands","title":"Unsupported cluster commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#asking-not-implemented","title":"ASKING (not implemented)","text":"<p>Sent by cluster clients after an -ASK redirect</p>"},{"location":"redis-commands/Redis/#cluster-not-implemented","title":"CLUSTER (not implemented)","text":"<p>A container for cluster commands</p>"},{"location":"redis-commands/Redis/#cluster-addslots-not-implemented","title":"CLUSTER ADDSLOTS (not implemented)","text":"<p>Assign new hash slots to receiving node</p>"},{"location":"redis-commands/Redis/#cluster-addslotsrange-not-implemented","title":"CLUSTER ADDSLOTSRANGE (not implemented)","text":"<p>Assign new hash slots to receiving node</p>"},{"location":"redis-commands/Redis/#cluster-bumpepoch-not-implemented","title":"CLUSTER BUMPEPOCH (not implemented)","text":"<p>Advance the cluster config epoch</p>"},{"location":"redis-commands/Redis/#cluster-count-failure-reports-not-implemented","title":"CLUSTER COUNT-FAILURE-REPORTS (not implemented)","text":"<p>Return the number of failure reports active for a given node</p>"},{"location":"redis-commands/Redis/#cluster-countkeysinslot-not-implemented","title":"CLUSTER COUNTKEYSINSLOT (not implemented)","text":"<p>Return the number of local keys in the specified hash slot</p>"},{"location":"redis-commands/Redis/#cluster-delslots-not-implemented","title":"CLUSTER DELSLOTS (not implemented)","text":"<p>Set hash slots as unbound in receiving node</p>"},{"location":"redis-commands/Redis/#cluster-delslotsrange-not-implemented","title":"CLUSTER DELSLOTSRANGE (not implemented)","text":"<p>Set hash slots as unbound in receiving node</p>"},{"location":"redis-commands/Redis/#cluster-failover-not-implemented","title":"CLUSTER FAILOVER (not implemented)","text":"<p>Forces a replica to perform a manual failover of its master.</p>"},{"location":"redis-commands/Redis/#cluster-flushslots-not-implemented","title":"CLUSTER FLUSHSLOTS (not implemented)","text":"<p>Delete a node's own slots information</p>"},{"location":"redis-commands/Redis/#cluster-forget-not-implemented","title":"CLUSTER FORGET (not implemented)","text":"<p>Remove a node from the nodes table</p>"},{"location":"redis-commands/Redis/#cluster-getkeysinslot-not-implemented","title":"CLUSTER GETKEYSINSLOT (not implemented)","text":"<p>Return local key names in the specified hash slot</p>"},{"location":"redis-commands/Redis/#cluster-help-not-implemented","title":"CLUSTER HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#cluster-info-not-implemented","title":"CLUSTER INFO (not implemented)","text":"<p>Provides info about Redis Cluster node state</p>"},{"location":"redis-commands/Redis/#cluster-keyslot-not-implemented","title":"CLUSTER KEYSLOT (not implemented)","text":"<p>Returns the hash slot of the specified key</p>"},{"location":"redis-commands/Redis/#cluster-links-not-implemented","title":"CLUSTER LINKS (not implemented)","text":"<p>Returns a list of all TCP links to and from peer nodes in cluster</p>"},{"location":"redis-commands/Redis/#cluster-meet-not-implemented","title":"CLUSTER MEET (not implemented)","text":"<p>Force a node cluster to handshake with another node</p>"},{"location":"redis-commands/Redis/#cluster-myid-not-implemented","title":"CLUSTER MYID (not implemented)","text":"<p>Return the node id</p>"},{"location":"redis-commands/Redis/#cluster-nodes-not-implemented","title":"CLUSTER NODES (not implemented)","text":"<p>Get Cluster config for the node</p>"},{"location":"redis-commands/Redis/#cluster-replicas-not-implemented","title":"CLUSTER REPLICAS (not implemented)","text":"<p>List replica nodes of the specified master node</p>"},{"location":"redis-commands/Redis/#cluster-replicate-not-implemented","title":"CLUSTER REPLICATE (not implemented)","text":"<p>Reconfigure a node as a replica of the specified master node</p>"},{"location":"redis-commands/Redis/#cluster-reset-not-implemented","title":"CLUSTER RESET (not implemented)","text":"<p>Reset a Redis Cluster node</p>"},{"location":"redis-commands/Redis/#cluster-saveconfig-not-implemented","title":"CLUSTER SAVECONFIG (not implemented)","text":"<p>Forces the node to save cluster state on disk</p>"},{"location":"redis-commands/Redis/#cluster-set-config-epoch-not-implemented","title":"CLUSTER SET-CONFIG-EPOCH (not implemented)","text":"<p>Set the configuration epoch in a new node</p>"},{"location":"redis-commands/Redis/#cluster-setslot-not-implemented","title":"CLUSTER SETSLOT (not implemented)","text":"<p>Bind a hash slot to a specific node</p>"},{"location":"redis-commands/Redis/#cluster-shards-not-implemented","title":"CLUSTER SHARDS (not implemented)","text":"<p>Get array of cluster slots to node mappings</p>"},{"location":"redis-commands/Redis/#cluster-slaves-not-implemented","title":"CLUSTER SLAVES (not implemented)","text":"<p>List replica nodes of the specified master node</p>"},{"location":"redis-commands/Redis/#cluster-slots-not-implemented","title":"CLUSTER SLOTS (not implemented)","text":"<p>Get array of Cluster slot to node mappings</p>"},{"location":"redis-commands/Redis/#readonly-not-implemented","title":"READONLY (not implemented)","text":"<p>Enables read queries for a connection to a cluster replica node</p>"},{"location":"redis-commands/Redis/#readwrite-not-implemented","title":"READWRITE (not implemented)","text":"<p>Disables read queries for a connection to a cluster replica node</p>"},{"location":"redis-commands/Redis/#connection-commands","title":"connection commands","text":""},{"location":"redis-commands/Redis/#echo","title":"ECHO","text":"<p>Echo the given string</p>"},{"location":"redis-commands/Redis/#ping","title":"PING","text":"<p>Ping the server</p>"},{"location":"redis-commands/Redis/#select","title":"SELECT","text":"<p>Change the selected database for the current connection</p>"},{"location":"redis-commands/Redis/#unsupported-connection-commands","title":"Unsupported connection commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#auth-not-implemented","title":"AUTH (not implemented)","text":"<p>Authenticate to the server</p>"},{"location":"redis-commands/Redis/#client-not-implemented","title":"CLIENT (not implemented)","text":"<p>A container for client connection commands</p>"},{"location":"redis-commands/Redis/#client-caching-not-implemented","title":"CLIENT CACHING (not implemented)","text":"<p>Instruct the server about tracking or not keys in the next request</p>"},{"location":"redis-commands/Redis/#client-getname-not-implemented","title":"CLIENT GETNAME (not implemented)","text":"<p>Get the current connection name</p>"},{"location":"redis-commands/Redis/#client-getredir-not-implemented","title":"CLIENT GETREDIR (not implemented)","text":"<p>Get tracking notifications redirection client ID if any</p>"},{"location":"redis-commands/Redis/#client-help-not-implemented","title":"CLIENT HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#client-id-not-implemented","title":"CLIENT ID (not implemented)","text":"<p>Returns the client ID for the current connection</p>"},{"location":"redis-commands/Redis/#client-info-not-implemented","title":"CLIENT INFO (not implemented)","text":"<p>Returns information about the current client connection.</p>"},{"location":"redis-commands/Redis/#client-kill-not-implemented","title":"CLIENT KILL (not implemented)","text":"<p>Kill the connection of a client</p>"},{"location":"redis-commands/Redis/#client-list-not-implemented","title":"CLIENT LIST (not implemented)","text":"<p>Get the list of client connections</p>"},{"location":"redis-commands/Redis/#client-no-evict-not-implemented","title":"CLIENT NO-EVICT (not implemented)","text":"<p>Set client eviction mode for the current connection</p>"},{"location":"redis-commands/Redis/#client-pause-not-implemented","title":"CLIENT PAUSE (not implemented)","text":"<p>Stop processing commands from clients for some time</p>"},{"location":"redis-commands/Redis/#client-reply-not-implemented","title":"CLIENT REPLY (not implemented)","text":"<p>Instruct the server whether to reply to commands</p>"},{"location":"redis-commands/Redis/#client-setname-not-implemented","title":"CLIENT SETNAME (not implemented)","text":"<p>Set the current connection name</p>"},{"location":"redis-commands/Redis/#client-tracking-not-implemented","title":"CLIENT TRACKING (not implemented)","text":"<p>Enable or disable server assisted client side caching support</p>"},{"location":"redis-commands/Redis/#client-trackinginfo-not-implemented","title":"CLIENT TRACKINGINFO (not implemented)","text":"<p>Return information about server assisted client side caching for the current connection</p>"},{"location":"redis-commands/Redis/#client-unblock-not-implemented","title":"CLIENT UNBLOCK (not implemented)","text":"<p>Unblock a client blocked in a blocking command from a different connection</p>"},{"location":"redis-commands/Redis/#client-unpause-not-implemented","title":"CLIENT UNPAUSE (not implemented)","text":"<p>Resume processing of clients that were paused</p>"},{"location":"redis-commands/Redis/#hello-not-implemented","title":"HELLO (not implemented)","text":"<p>Handshake with Redis</p>"},{"location":"redis-commands/Redis/#quit-not-implemented","title":"QUIT (not implemented)","text":"<p>Close the connection</p>"},{"location":"redis-commands/Redis/#reset-not-implemented","title":"RESET (not implemented)","text":"<p>Reset the connection</p>"},{"location":"redis-commands/Redis/#bitmap-commands","title":"bitmap commands","text":""},{"location":"redis-commands/Redis/#bitcount","title":"BITCOUNT","text":"<p>Count set bits in a string</p>"},{"location":"redis-commands/Redis/#bitop","title":"BITOP","text":"<p>Perform bitwise operations between strings</p>"},{"location":"redis-commands/Redis/#bitpos","title":"BITPOS","text":"<p>Find first bit set or clear in a string</p>"},{"location":"redis-commands/Redis/#getbit","title":"GETBIT","text":"<p>Returns the bit value at offset in the string value stored at key</p>"},{"location":"redis-commands/Redis/#setbit","title":"SETBIT","text":"<p>Sets or clears the bit at offset in the string value stored at key</p>"},{"location":"redis-commands/Redis/#unsupported-bitmap-commands","title":"Unsupported bitmap commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#bitfield-not-implemented","title":"BITFIELD (not implemented)","text":"<p>Perform arbitrary bitfield integer operations on strings</p>"},{"location":"redis-commands/Redis/#bitfield_ro-not-implemented","title":"BITFIELD_RO (not implemented)","text":"<p>Perform arbitrary bitfield integer operations on strings. Read-only variant of BITFIELD</p>"},{"location":"redis-commands/Redis/#list-commands","title":"list commands","text":""},{"location":"redis-commands/Redis/#blpop","title":"BLPOP","text":"<p>Remove and get the first element in a list, or block until one is available</p>"},{"location":"redis-commands/Redis/#brpop","title":"BRPOP","text":"<p>Remove and get the last element in a list, or block until one is available</p>"},{"location":"redis-commands/Redis/#brpoplpush","title":"BRPOPLPUSH","text":"<p>Pop an element from a list, push it to another list and return it; or block until one is available</p>"},{"location":"redis-commands/Redis/#lindex","title":"LINDEX","text":"<p>Get an element from a list by its index</p>"},{"location":"redis-commands/Redis/#linsert","title":"LINSERT","text":"<p>Insert an element before or after another element in a list</p>"},{"location":"redis-commands/Redis/#llen","title":"LLEN","text":"<p>Get the length of a list</p>"},{"location":"redis-commands/Redis/#lmove","title":"LMOVE","text":"<p>Pop an element from a list, push it to another list and return it</p>"},{"location":"redis-commands/Redis/#lpop","title":"LPOP","text":"<p>Remove and get the first elements in a list</p>"},{"location":"redis-commands/Redis/#lpush","title":"LPUSH","text":"<p>Prepend one or multiple elements to a list</p>"},{"location":"redis-commands/Redis/#lpushx","title":"LPUSHX","text":"<p>Prepend an element to a list, only if the list exists</p>"},{"location":"redis-commands/Redis/#lrange","title":"LRANGE","text":"<p>Get a range of elements from a list</p>"},{"location":"redis-commands/Redis/#lrem","title":"LREM","text":"<p>Remove elements from a list</p>"},{"location":"redis-commands/Redis/#lset","title":"LSET","text":"<p>Set the value of an element in a list by its index</p>"},{"location":"redis-commands/Redis/#ltrim","title":"LTRIM","text":"<p>Trim a list to the specified range</p>"},{"location":"redis-commands/Redis/#rpop","title":"RPOP","text":"<p>Remove and get the last elements in a list</p>"},{"location":"redis-commands/Redis/#rpoplpush","title":"RPOPLPUSH","text":"<p>Remove the last element in a list, prepend it to another list and return it</p>"},{"location":"redis-commands/Redis/#rpush","title":"RPUSH","text":"<p>Append one or multiple elements to a list</p>"},{"location":"redis-commands/Redis/#rpushx","title":"RPUSHX","text":"<p>Append an element to a list, only if the list exists</p>"},{"location":"redis-commands/Redis/#unsupported-list-commands","title":"Unsupported list commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#blmove-not-implemented","title":"BLMOVE (not implemented)","text":"<p>Pop an element from a list, push it to another list and return it; or block until one is available</p>"},{"location":"redis-commands/Redis/#blmpop-not-implemented","title":"BLMPOP (not implemented)","text":"<p>Pop elements from a list, or block until one is available</p>"},{"location":"redis-commands/Redis/#lmpop-not-implemented","title":"LMPOP (not implemented)","text":"<p>Pop elements from a list</p>"},{"location":"redis-commands/Redis/#lpos-not-implemented","title":"LPOS (not implemented)","text":"<p>Return the index of matching elements on a list</p>"},{"location":"redis-commands/Redis/#sorted-set-commands","title":"sorted-set commands","text":""},{"location":"redis-commands/Redis/#bzpopmax","title":"BZPOPMAX","text":"<p>Remove and return the member with the highest score from one or more sorted sets, or block until one is available</p>"},{"location":"redis-commands/Redis/#bzpopmin","title":"BZPOPMIN","text":"<p>Remove and return the member with the lowest score from one or more sorted sets, or block until one is available</p>"},{"location":"redis-commands/Redis/#zadd","title":"ZADD","text":"<p>Add one or more members to a sorted set, or update its score if it already exists</p>"},{"location":"redis-commands/Redis/#zcard","title":"ZCARD","text":"<p>Get the number of members in a sorted set</p>"},{"location":"redis-commands/Redis/#zcount","title":"ZCOUNT","text":"<p>Count the members in a sorted set with scores within the given values</p>"},{"location":"redis-commands/Redis/#zincrby","title":"ZINCRBY","text":"<p>Increment the score of a member in a sorted set</p>"},{"location":"redis-commands/Redis/#zinterstore","title":"ZINTERSTORE","text":"<p>Intersect multiple sorted sets and store the resulting sorted set in a new key</p>"},{"location":"redis-commands/Redis/#zlexcount","title":"ZLEXCOUNT","text":"<p>Count the number of members in a sorted set between a given lexicographical range</p>"},{"location":"redis-commands/Redis/#zmscore","title":"ZMSCORE","text":"<p>Get the score associated with the given members in a sorted set</p>"},{"location":"redis-commands/Redis/#zpopmax","title":"ZPOPMAX","text":"<p>Remove and return members with the highest scores in a sorted set</p>"},{"location":"redis-commands/Redis/#zpopmin","title":"ZPOPMIN","text":"<p>Remove and return members with the lowest scores in a sorted set</p>"},{"location":"redis-commands/Redis/#zrange","title":"ZRANGE","text":"<p>Return a range of members in a sorted set</p>"},{"location":"redis-commands/Redis/#zrangebylex","title":"ZRANGEBYLEX","text":"<p>Return a range of members in a sorted set, by lexicographical range</p>"},{"location":"redis-commands/Redis/#zrangebyscore","title":"ZRANGEBYSCORE","text":"<p>Return a range of members in a sorted set, by score</p>"},{"location":"redis-commands/Redis/#zrank","title":"ZRANK","text":"<p>Determine the index of a member in a sorted set</p>"},{"location":"redis-commands/Redis/#zrem","title":"ZREM","text":"<p>Remove one or more members from a sorted set</p>"},{"location":"redis-commands/Redis/#zremrangebylex","title":"ZREMRANGEBYLEX","text":"<p>Remove all members in a sorted set between the given lexicographical range</p>"},{"location":"redis-commands/Redis/#zremrangebyrank","title":"ZREMRANGEBYRANK","text":"<p>Remove all members in a sorted set within the given indexes</p>"},{"location":"redis-commands/Redis/#zremrangebyscore","title":"ZREMRANGEBYSCORE","text":"<p>Remove all members in a sorted set within the given scores</p>"},{"location":"redis-commands/Redis/#zrevrange","title":"ZREVRANGE","text":"<p>Return a range of members in a sorted set, by index, with scores ordered from high to low</p>"},{"location":"redis-commands/Redis/#zrevrangebylex","title":"ZREVRANGEBYLEX","text":"<p>Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.</p>"},{"location":"redis-commands/Redis/#zrevrangebyscore","title":"ZREVRANGEBYSCORE","text":"<p>Return a range of members in a sorted set, by score, with scores ordered from high to low</p>"},{"location":"redis-commands/Redis/#zrevrank","title":"ZREVRANK","text":"<p>Determine the index of a member in a sorted set, with scores ordered from high to low</p>"},{"location":"redis-commands/Redis/#zscan","title":"ZSCAN","text":"<p>Incrementally iterate sorted sets elements and associated scores</p>"},{"location":"redis-commands/Redis/#zscore","title":"ZSCORE","text":"<p>Get the score associated with the given member in a sorted set</p>"},{"location":"redis-commands/Redis/#zunionstore","title":"ZUNIONSTORE","text":"<p>Add multiple sorted sets and store the resulting sorted set in a new key</p>"},{"location":"redis-commands/Redis/#unsupported-sorted-set-commands","title":"Unsupported sorted-set commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#bzmpop-not-implemented","title":"BZMPOP (not implemented)","text":"<p>Remove and return members with scores in a sorted set or block until one is available</p>"},{"location":"redis-commands/Redis/#zdiff-not-implemented","title":"ZDIFF (not implemented)","text":"<p>Subtract multiple sorted sets</p>"},{"location":"redis-commands/Redis/#zdiffstore-not-implemented","title":"ZDIFFSTORE (not implemented)","text":"<p>Subtract multiple sorted sets and store the resulting sorted set in a new key</p>"},{"location":"redis-commands/Redis/#zinter-not-implemented","title":"ZINTER (not implemented)","text":"<p>Intersect multiple sorted sets</p>"},{"location":"redis-commands/Redis/#zintercard-not-implemented","title":"ZINTERCARD (not implemented)","text":"<p>Intersect multiple sorted sets and return the cardinality of the result</p>"},{"location":"redis-commands/Redis/#zmpop-not-implemented","title":"ZMPOP (not implemented)","text":"<p>Remove and return members with scores in a sorted set</p>"},{"location":"redis-commands/Redis/#zrandmember-not-implemented","title":"ZRANDMEMBER (not implemented)","text":"<p>Get one or multiple random elements from a sorted set</p>"},{"location":"redis-commands/Redis/#zrangestore-not-implemented","title":"ZRANGESTORE (not implemented)","text":"<p>Store a range of members from sorted set into another key</p>"},{"location":"redis-commands/Redis/#zunion-not-implemented","title":"ZUNION (not implemented)","text":"<p>Add multiple sorted sets</p>"},{"location":"redis-commands/Redis/#generic-commands","title":"generic commands","text":""},{"location":"redis-commands/Redis/#del","title":"DEL","text":"<p>Delete a key</p>"},{"location":"redis-commands/Redis/#dump","title":"DUMP","text":"<p>Return a serialized version of the value stored at the specified key.</p>"},{"location":"redis-commands/Redis/#exists","title":"EXISTS","text":"<p>Determine if a key exists</p>"},{"location":"redis-commands/Redis/#expire","title":"EXPIRE","text":"<p>Set a key's time to live in seconds</p>"},{"location":"redis-commands/Redis/#expireat","title":"EXPIREAT","text":"<p>Set the expiration for a key as a UNIX timestamp</p>"},{"location":"redis-commands/Redis/#keys","title":"KEYS","text":"<p>Find all keys matching the given pattern</p>"},{"location":"redis-commands/Redis/#move","title":"MOVE","text":"<p>Move a key to another database</p>"},{"location":"redis-commands/Redis/#persist","title":"PERSIST","text":"<p>Remove the expiration from a key</p>"},{"location":"redis-commands/Redis/#pexpire","title":"PEXPIRE","text":"<p>Set a key's time to live in milliseconds</p>"},{"location":"redis-commands/Redis/#pexpireat","title":"PEXPIREAT","text":"<p>Set the expiration for a key as a UNIX timestamp specified in milliseconds</p>"},{"location":"redis-commands/Redis/#pttl","title":"PTTL","text":"<p>Get the time to live for a key in milliseconds</p>"},{"location":"redis-commands/Redis/#randomkey","title":"RANDOMKEY","text":"<p>Return a random key from the keyspace</p>"},{"location":"redis-commands/Redis/#rename","title":"RENAME","text":"<p>Rename a key</p>"},{"location":"redis-commands/Redis/#renamenx","title":"RENAMENX","text":"<p>Rename a key, only if the new key does not exist</p>"},{"location":"redis-commands/Redis/#restore","title":"RESTORE","text":"<p>Create a key using the provided serialized value, previously obtained using DUMP.</p>"},{"location":"redis-commands/Redis/#scan","title":"SCAN","text":"<p>Incrementally iterate the keys space</p>"},{"location":"redis-commands/Redis/#sort","title":"SORT","text":"<p>Sort the elements in a list, set or sorted set</p>"},{"location":"redis-commands/Redis/#ttl","title":"TTL","text":"<p>Get the time to live for a key in seconds</p>"},{"location":"redis-commands/Redis/#type","title":"TYPE","text":"<p>Determine the type stored at key</p>"},{"location":"redis-commands/Redis/#unlink","title":"UNLINK","text":"<p>Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.</p>"},{"location":"redis-commands/Redis/#unsupported-generic-commands","title":"Unsupported generic commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#copy-not-implemented","title":"COPY (not implemented)","text":"<p>Copy a key</p>"},{"location":"redis-commands/Redis/#expiretime-not-implemented","title":"EXPIRETIME (not implemented)","text":"<p>Get the expiration Unix timestamp for a key</p>"},{"location":"redis-commands/Redis/#migrate-not-implemented","title":"MIGRATE (not implemented)","text":"<p>Atomically transfer a key from a Redis instance to another one.</p>"},{"location":"redis-commands/Redis/#object-not-implemented","title":"OBJECT (not implemented)","text":"<p>A container for object introspection commands</p>"},{"location":"redis-commands/Redis/#object-encoding-not-implemented","title":"OBJECT ENCODING (not implemented)","text":"<p>Inspect the internal encoding of a Redis object</p>"},{"location":"redis-commands/Redis/#object-freq-not-implemented","title":"OBJECT FREQ (not implemented)","text":"<p>Get the logarithmic access frequency counter of a Redis object</p>"},{"location":"redis-commands/Redis/#object-help-not-implemented","title":"OBJECT HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#object-idletime-not-implemented","title":"OBJECT IDLETIME (not implemented)","text":"<p>Get the time since a Redis object was last accessed</p>"},{"location":"redis-commands/Redis/#object-refcount-not-implemented","title":"OBJECT REFCOUNT (not implemented)","text":"<p>Get the number of references to the value of the key</p>"},{"location":"redis-commands/Redis/#pexpiretime-not-implemented","title":"PEXPIRETIME (not implemented)","text":"<p>Get the expiration Unix timestamp for a key in milliseconds</p>"},{"location":"redis-commands/Redis/#sort_ro-not-implemented","title":"SORT_RO (not implemented)","text":"<p>Sort the elements in a list, set or sorted set. Read-only variant of SORT.</p>"},{"location":"redis-commands/Redis/#touch-not-implemented","title":"TOUCH (not implemented)","text":"<p>Alters the last access time of a key(s). Returns the number of existing keys specified.</p>"},{"location":"redis-commands/Redis/#wait-not-implemented","title":"WAIT (not implemented)","text":"<p>Wait for the synchronous replication of all the write commands sent in the context of the current connection</p>"},{"location":"redis-commands/Redis/#transactions-commands","title":"transactions commands","text":""},{"location":"redis-commands/Redis/#discard","title":"DISCARD","text":"<p>Discard all commands issued after MULTI</p>"},{"location":"redis-commands/Redis/#exec","title":"EXEC","text":"<p>Execute all commands issued after MULTI</p>"},{"location":"redis-commands/Redis/#multi","title":"MULTI","text":"<p>Mark the start of a transaction block</p>"},{"location":"redis-commands/Redis/#unwatch","title":"UNWATCH","text":"<p>Forget about all watched keys</p>"},{"location":"redis-commands/Redis/#watch","title":"WATCH","text":"<p>Watch the given keys to determine execution of the MULTI/EXEC block</p>"},{"location":"redis-commands/Redis/#unsupported-transactions-commands","title":"Unsupported transactions commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#scripting-commands","title":"scripting commands","text":""},{"location":"redis-commands/Redis/#eval","title":"EVAL","text":"<p>Execute a Lua script server side</p>"},{"location":"redis-commands/Redis/#evalsha","title":"EVALSHA","text":"<p>Execute a Lua script server side</p>"},{"location":"redis-commands/Redis/#script","title":"SCRIPT","text":"<p>A container for Lua scripts management commands</p>"},{"location":"redis-commands/Redis/#script-exists","title":"SCRIPT EXISTS","text":"<p>Check existence of scripts in the script cache.</p>"},{"location":"redis-commands/Redis/#script-flush","title":"SCRIPT FLUSH","text":"<p>Remove all the scripts from the script cache.</p>"},{"location":"redis-commands/Redis/#script-help","title":"SCRIPT HELP","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#script-load","title":"SCRIPT LOAD","text":"<p>Load the specified Lua script into the script cache.</p>"},{"location":"redis-commands/Redis/#unsupported-scripting-commands","title":"Unsupported scripting commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#evalsha_ro-not-implemented","title":"EVALSHA_RO (not implemented)","text":"<p>Execute a read-only Lua script server side</p>"},{"location":"redis-commands/Redis/#eval_ro-not-implemented","title":"EVAL_RO (not implemented)","text":"<p>Execute a read-only Lua script server side</p>"},{"location":"redis-commands/Redis/#fcall-not-implemented","title":"FCALL (not implemented)","text":"<p>Invoke a function</p>"},{"location":"redis-commands/Redis/#fcall_ro-not-implemented","title":"FCALL_RO (not implemented)","text":"<p>Invoke a read-only function</p>"},{"location":"redis-commands/Redis/#function-not-implemented","title":"FUNCTION (not implemented)","text":"<p>A container for function commands</p>"},{"location":"redis-commands/Redis/#function-delete-not-implemented","title":"FUNCTION DELETE (not implemented)","text":"<p>Delete a function by name</p>"},{"location":"redis-commands/Redis/#function-dump-not-implemented","title":"FUNCTION DUMP (not implemented)","text":"<p>Dump all functions into a serialized binary payload</p>"},{"location":"redis-commands/Redis/#function-flush-not-implemented","title":"FUNCTION FLUSH (not implemented)","text":"<p>Deleting all functions</p>"},{"location":"redis-commands/Redis/#function-help-not-implemented","title":"FUNCTION HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#function-kill-not-implemented","title":"FUNCTION KILL (not implemented)","text":"<p>Kill the function currently in execution.</p>"},{"location":"redis-commands/Redis/#function-list-not-implemented","title":"FUNCTION LIST (not implemented)","text":"<p>List information about all the functions</p>"},{"location":"redis-commands/Redis/#function-load-not-implemented","title":"FUNCTION LOAD (not implemented)","text":"<p>Create a function with the given arguments (name, code, description)</p>"},{"location":"redis-commands/Redis/#function-restore-not-implemented","title":"FUNCTION RESTORE (not implemented)","text":"<p>Restore all the functions on the given payload</p>"},{"location":"redis-commands/Redis/#function-stats-not-implemented","title":"FUNCTION STATS (not implemented)","text":"<p>Return information about the function currently running (name, description, duration)</p>"},{"location":"redis-commands/Redis/#script-debug-not-implemented","title":"SCRIPT DEBUG (not implemented)","text":"<p>Set the debug mode for executed scripts.</p>"},{"location":"redis-commands/Redis/#script-kill-not-implemented","title":"SCRIPT KILL (not implemented)","text":"<p>Kill the script currently in execution.</p>"},{"location":"redis-commands/Redis/#geo-commands","title":"geo commands","text":""},{"location":"redis-commands/Redis/#geoadd","title":"GEOADD","text":"<p>Add one or more geospatial items in the geospatial index represented using a sorted set</p>"},{"location":"redis-commands/Redis/#geodist","title":"GEODIST","text":"<p>Returns the distance between two members of a geospatial index</p>"},{"location":"redis-commands/Redis/#geohash","title":"GEOHASH","text":"<p>Returns members of a geospatial index as standard geohash strings</p>"},{"location":"redis-commands/Redis/#geopos","title":"GEOPOS","text":"<p>Returns longitude and latitude of members of a geospatial index</p>"},{"location":"redis-commands/Redis/#georadius","title":"GEORADIUS","text":"<p>Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point</p>"},{"location":"redis-commands/Redis/#georadiusbymember","title":"GEORADIUSBYMEMBER","text":"<p>Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member</p>"},{"location":"redis-commands/Redis/#georadiusbymember_ro","title":"GEORADIUSBYMEMBER_RO","text":"<p>A read-only variant for GEORADIUSBYMEMBER</p>"},{"location":"redis-commands/Redis/#georadius_ro","title":"GEORADIUS_RO","text":"<p>A read-only variant for GEORADIUS</p>"},{"location":"redis-commands/Redis/#geosearch","title":"GEOSEARCH","text":"<p>Query a sorted set representing a geospatial index to fetch members inside an area of a box or a circle.</p>"},{"location":"redis-commands/Redis/#geosearchstore","title":"GEOSEARCHSTORE","text":"<p>Query a sorted set representing a geospatial index to fetch members inside an area of a box or a circle, and store the result in another key.</p>"},{"location":"redis-commands/Redis/#unsupported-geo-commands","title":"Unsupported geo commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#hash-commands","title":"hash commands","text":""},{"location":"redis-commands/Redis/#hdel","title":"HDEL","text":"<p>Delete one or more hash fields</p>"},{"location":"redis-commands/Redis/#hexists","title":"HEXISTS","text":"<p>Determine if a hash field exists</p>"},{"location":"redis-commands/Redis/#hget","title":"HGET","text":"<p>Get the value of a hash field</p>"},{"location":"redis-commands/Redis/#hgetall","title":"HGETALL","text":"<p>Get all the fields and values in a hash</p>"},{"location":"redis-commands/Redis/#hincrby","title":"HINCRBY","text":"<p>Increment the integer value of a hash field by the given number</p>"},{"location":"redis-commands/Redis/#hincrbyfloat","title":"HINCRBYFLOAT","text":"<p>Increment the float value of a hash field by the given amount</p>"},{"location":"redis-commands/Redis/#hkeys","title":"HKEYS","text":"<p>Get all the fields in a hash</p>"},{"location":"redis-commands/Redis/#hlen","title":"HLEN","text":"<p>Get the number of fields in a hash</p>"},{"location":"redis-commands/Redis/#hmget","title":"HMGET","text":"<p>Get the values of all the given hash fields</p>"},{"location":"redis-commands/Redis/#hmset","title":"HMSET","text":"<p>Set multiple hash fields to multiple values</p>"},{"location":"redis-commands/Redis/#hscan","title":"HSCAN","text":"<p>Incrementally iterate hash fields and associated values</p>"},{"location":"redis-commands/Redis/#hset","title":"HSET","text":"<p>Set the string value of a hash field</p>"},{"location":"redis-commands/Redis/#hsetnx","title":"HSETNX","text":"<p>Set the value of a hash field, only if the field does not exist</p>"},{"location":"redis-commands/Redis/#hstrlen","title":"HSTRLEN","text":"<p>Get the length of the value of a hash field</p>"},{"location":"redis-commands/Redis/#hvals","title":"HVALS","text":"<p>Get all the values in a hash</p>"},{"location":"redis-commands/Redis/#unsupported-hash-commands","title":"Unsupported hash commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#hrandfield-not-implemented","title":"HRANDFIELD (not implemented)","text":"<p>Get one or multiple random fields from a hash</p>"},{"location":"redis-commands/Redis/#hyperloglog-commands","title":"hyperloglog commands","text":""},{"location":"redis-commands/Redis/#pfadd","title":"PFADD","text":"<p>Adds the specified elements to the specified HyperLogLog.</p>"},{"location":"redis-commands/Redis/#pfcount","title":"PFCOUNT","text":"<p>Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).</p>"},{"location":"redis-commands/Redis/#pfmerge","title":"PFMERGE","text":"<p>Merge N different HyperLogLogs into a single one.</p>"},{"location":"redis-commands/Redis/#unsupported-hyperloglog-commands","title":"Unsupported hyperloglog commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#pfdebug-not-implemented","title":"PFDEBUG (not implemented)","text":"<p>Internal commands for debugging HyperLogLog values</p>"},{"location":"redis-commands/Redis/#pfselftest-not-implemented","title":"PFSELFTEST (not implemented)","text":"<p>An internal command for testing HyperLogLog values</p>"},{"location":"redis-commands/Redis/#pubsub-commands","title":"pubsub commands","text":""},{"location":"redis-commands/Redis/#psubscribe","title":"PSUBSCRIBE","text":"<p>Listen for messages published to channels matching the given patterns</p>"},{"location":"redis-commands/Redis/#publish","title":"PUBLISH","text":"<p>Post a message to a channel</p>"},{"location":"redis-commands/Redis/#pubsub","title":"PUBSUB","text":"<p>A container for Pub/Sub commands</p>"},{"location":"redis-commands/Redis/#pubsub-channels","title":"PUBSUB CHANNELS","text":"<p>List active channels</p>"},{"location":"redis-commands/Redis/#pubsub-help","title":"PUBSUB HELP","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#pubsub-numsub","title":"PUBSUB NUMSUB","text":"<p>Get the count of subscribers for channels</p>"},{"location":"redis-commands/Redis/#punsubscribe","title":"PUNSUBSCRIBE","text":"<p>Stop listening for messages posted to channels matching the given patterns</p>"},{"location":"redis-commands/Redis/#subscribe","title":"SUBSCRIBE","text":"<p>Listen for messages published to the given channels</p>"},{"location":"redis-commands/Redis/#unsubscribe","title":"UNSUBSCRIBE","text":"<p>Stop listening for messages posted to the given channels</p>"},{"location":"redis-commands/Redis/#unsupported-pubsub-commands","title":"Unsupported pubsub commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#pubsub-numpat-not-implemented","title":"PUBSUB NUMPAT (not implemented)","text":"<p>Get the count of unique patterns pattern subscriptions</p>"},{"location":"redis-commands/Redis/#pubsub-shardchannels-not-implemented","title":"PUBSUB SHARDCHANNELS (not implemented)","text":"<p>List active shard channels</p>"},{"location":"redis-commands/Redis/#pubsub-shardnumsub-not-implemented","title":"PUBSUB SHARDNUMSUB (not implemented)","text":"<p>Get the count of subscribers for shard channels</p>"},{"location":"redis-commands/Redis/#spublish-not-implemented","title":"SPUBLISH (not implemented)","text":"<p>Post a message to a shard channel</p>"},{"location":"redis-commands/Redis/#ssubscribe-not-implemented","title":"SSUBSCRIBE (not implemented)","text":"<p>Listen for messages published to the given shard channels</p>"},{"location":"redis-commands/Redis/#sunsubscribe-not-implemented","title":"SUNSUBSCRIBE (not implemented)","text":"<p>Stop listening for messages posted to the given shard channels</p>"},{"location":"redis-commands/Redis/#set-commands","title":"set commands","text":""},{"location":"redis-commands/Redis/#sadd","title":"SADD","text":"<p>Add one or more members to a set</p>"},{"location":"redis-commands/Redis/#scard","title":"SCARD","text":"<p>Get the number of members in a set</p>"},{"location":"redis-commands/Redis/#sdiff","title":"SDIFF","text":"<p>Subtract multiple sets</p>"},{"location":"redis-commands/Redis/#sdiffstore","title":"SDIFFSTORE","text":"<p>Subtract multiple sets and store the resulting set in a key</p>"},{"location":"redis-commands/Redis/#sinter","title":"SINTER","text":"<p>Intersect multiple sets</p>"},{"location":"redis-commands/Redis/#sintercard","title":"SINTERCARD","text":"<p>Intersect multiple sets and return the cardinality of the result</p>"},{"location":"redis-commands/Redis/#sinterstore","title":"SINTERSTORE","text":"<p>Intersect multiple sets and store the resulting set in a key</p>"},{"location":"redis-commands/Redis/#sismember","title":"SISMEMBER","text":"<p>Determine if a given value is a member of a set</p>"},{"location":"redis-commands/Redis/#smembers","title":"SMEMBERS","text":"<p>Get all the members in a set</p>"},{"location":"redis-commands/Redis/#smismember","title":"SMISMEMBER","text":"<p>Returns the membership associated with the given elements for a set</p>"},{"location":"redis-commands/Redis/#smove","title":"SMOVE","text":"<p>Move a member from one set to another</p>"},{"location":"redis-commands/Redis/#spop","title":"SPOP","text":"<p>Remove and return one or multiple random members from a set</p>"},{"location":"redis-commands/Redis/#srandmember","title":"SRANDMEMBER","text":"<p>Get one or multiple random members from a set</p>"},{"location":"redis-commands/Redis/#srem","title":"SREM","text":"<p>Remove one or more members from a set</p>"},{"location":"redis-commands/Redis/#sscan","title":"SSCAN","text":"<p>Incrementally iterate Set elements</p>"},{"location":"redis-commands/Redis/#sunion","title":"SUNION","text":"<p>Add multiple sets</p>"},{"location":"redis-commands/Redis/#sunionstore","title":"SUNIONSTORE","text":"<p>Add multiple sets and store the resulting set in a key</p>"},{"location":"redis-commands/Redis/#unsupported-set-commands","title":"Unsupported set commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#stream-commands","title":"stream commands","text":""},{"location":"redis-commands/Redis/#xadd","title":"XADD","text":"<p>Appends a new entry to a stream</p>"},{"location":"redis-commands/Redis/#xlen","title":"XLEN","text":"<p>Return the number of entries in a stream</p>"},{"location":"redis-commands/Redis/#xrange","title":"XRANGE","text":"<p>Return a range of elements in a stream, with IDs matching the specified IDs interval</p>"},{"location":"redis-commands/Redis/#xrevrange","title":"XREVRANGE","text":"<p>Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE</p>"},{"location":"redis-commands/Redis/#xtrim","title":"XTRIM","text":"<p>Trims the stream to (approximately if '~' is passed) a certain size</p>"},{"location":"redis-commands/Redis/#unsupported-stream-commands","title":"Unsupported stream commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/Redis/#xack-not-implemented","title":"XACK (not implemented)","text":"<p>Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.</p>"},{"location":"redis-commands/Redis/#xautoclaim-not-implemented","title":"XAUTOCLAIM (not implemented)","text":"<p>Changes (or acquires) ownership of messages in a consumer group, as if the messages were delivered to the specified consumer.</p>"},{"location":"redis-commands/Redis/#xclaim-not-implemented","title":"XCLAIM (not implemented)","text":"<p>Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.</p>"},{"location":"redis-commands/Redis/#xdel-not-implemented","title":"XDEL (not implemented)","text":"<p>Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.</p>"},{"location":"redis-commands/Redis/#xgroup-not-implemented","title":"XGROUP (not implemented)","text":"<p>A container for consumer groups commands</p>"},{"location":"redis-commands/Redis/#xgroup-create-not-implemented","title":"XGROUP CREATE (not implemented)","text":"<p>Create a consumer group.</p>"},{"location":"redis-commands/Redis/#xgroup-createconsumer-not-implemented","title":"XGROUP CREATECONSUMER (not implemented)","text":"<p>Create a consumer in a consumer group.</p>"},{"location":"redis-commands/Redis/#xgroup-delconsumer-not-implemented","title":"XGROUP DELCONSUMER (not implemented)","text":"<p>Delete a consumer from a consumer group.</p>"},{"location":"redis-commands/Redis/#xgroup-destroy-not-implemented","title":"XGROUP DESTROY (not implemented)","text":"<p>Destroy a consumer group.</p>"},{"location":"redis-commands/Redis/#xgroup-help-not-implemented","title":"XGROUP HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#xgroup-setid-not-implemented","title":"XGROUP SETID (not implemented)","text":"<p>Set a consumer group to an arbitrary last delivered ID value.</p>"},{"location":"redis-commands/Redis/#xinfo-not-implemented","title":"XINFO (not implemented)","text":"<p>A container for stream introspection commands</p>"},{"location":"redis-commands/Redis/#xinfo-consumers-not-implemented","title":"XINFO CONSUMERS (not implemented)","text":"<p>List the consumers in a consumer group</p>"},{"location":"redis-commands/Redis/#xinfo-groups-not-implemented","title":"XINFO GROUPS (not implemented)","text":"<p>List the consumer groups of a stream</p>"},{"location":"redis-commands/Redis/#xinfo-help-not-implemented","title":"XINFO HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"redis-commands/Redis/#xinfo-stream-not-implemented","title":"XINFO STREAM (not implemented)","text":"<p>Get information about a stream</p>"},{"location":"redis-commands/Redis/#xpending-not-implemented","title":"XPENDING (not implemented)","text":"<p>Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.</p>"},{"location":"redis-commands/Redis/#xread-not-implemented","title":"XREAD (not implemented)","text":"<p>Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.</p>"},{"location":"redis-commands/Redis/#xreadgroup-not-implemented","title":"XREADGROUP (not implemented)","text":"<p>Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.</p>"},{"location":"redis-commands/Redis/#xsetid-not-implemented","title":"XSETID (not implemented)","text":"<p>An internal command for replicating stream values</p>"},{"location":"redis-commands/RedisBloom/","title":"Probabilistic commands","text":"<p>Module currently not implemented in fakeredis.</p>"},{"location":"redis-commands/RedisBloom/#unsupported-bf-commands","title":"Unsupported bf commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisBloom/#bfreserve-not-implemented","title":"BF.RESERVE (not implemented)","text":"<p>Creates a new Bloom Filter</p>"},{"location":"redis-commands/RedisBloom/#bfadd-not-implemented","title":"BF.ADD (not implemented)","text":"<p>Adds an item to a Bloom Filter</p>"},{"location":"redis-commands/RedisBloom/#bfmadd-not-implemented","title":"BF.MADD (not implemented)","text":"<p>Adds one or more items to a Bloom Filter. A filter will be created if it does not exist</p>"},{"location":"redis-commands/RedisBloom/#bfinsert-not-implemented","title":"BF.INSERT (not implemented)","text":"<p>Adds one or more items to a Bloom Filter. A filter will be created if it does not exist</p>"},{"location":"redis-commands/RedisBloom/#bfexists-not-implemented","title":"BF.EXISTS (not implemented)","text":"<p>Checks whether an item exists in a Bloom Filter</p>"},{"location":"redis-commands/RedisBloom/#bfmexists-not-implemented","title":"BF.MEXISTS (not implemented)","text":"<p>Checks whether one or more items exist in a Bloom Filter</p>"},{"location":"redis-commands/RedisBloom/#bfscandump-not-implemented","title":"BF.SCANDUMP (not implemented)","text":"<p>Begins an incremental save of the bloom filter</p>"},{"location":"redis-commands/RedisBloom/#bfloadchunk-not-implemented","title":"BF.LOADCHUNK (not implemented)","text":"<p>Restores a filter previously saved using SCANDUMP</p>"},{"location":"redis-commands/RedisBloom/#bfinfo-not-implemented","title":"BF.INFO (not implemented)","text":"<p>Returns information about a Bloom Filter</p>"},{"location":"redis-commands/RedisBloom/#unsupported-cf-commands","title":"Unsupported cf commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisBloom/#cfreserve-not-implemented","title":"CF.RESERVE (not implemented)","text":"<p>Creates a new Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfadd-not-implemented","title":"CF.ADD (not implemented)","text":"<p>Adds an item to a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfaddnx-not-implemented","title":"CF.ADDNX (not implemented)","text":"<p>Adds an item to a Cuckoo Filter if the item did not exist previously.</p>"},{"location":"redis-commands/RedisBloom/#cfinsert-not-implemented","title":"CF.INSERT (not implemented)","text":"<p>Adds one or more items to a Cuckoo Filter. A filter will be created if it does not exist</p>"},{"location":"redis-commands/RedisBloom/#cfinsertnx-not-implemented","title":"CF.INSERTNX (not implemented)","text":"<p>Adds one or more items to a Cuckoo Filter if the items did not exist previously. A filter will be created if it does not exist</p>"},{"location":"redis-commands/RedisBloom/#cfexists-not-implemented","title":"CF.EXISTS (not implemented)","text":"<p>Checks whether one or more items exist in a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfmexists-not-implemented","title":"CF.MEXISTS (not implemented)","text":"<p>Checks whether one or more items exist in a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfdel-not-implemented","title":"CF.DEL (not implemented)","text":"<p>Deletes an item from a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfcount-not-implemented","title":"CF.COUNT (not implemented)","text":"<p>Return the number of times an item might be in a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#cfscandump-not-implemented","title":"CF.SCANDUMP (not implemented)","text":"<p>Begins an incremental save of the bloom filter</p>"},{"location":"redis-commands/RedisBloom/#cfloadchunk-not-implemented","title":"CF.LOADCHUNK (not implemented)","text":"<p>Restores a filter previously saved using SCANDUMP</p>"},{"location":"redis-commands/RedisBloom/#cfinfo-not-implemented","title":"CF.INFO (not implemented)","text":"<p>Returns information about a Cuckoo Filter</p>"},{"location":"redis-commands/RedisBloom/#unsupported-cms-commands","title":"Unsupported cms commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisBloom/#cmsinitbydim-not-implemented","title":"CMS.INITBYDIM (not implemented)","text":"<p>Initializes a Count-Min Sketch to dimensions specified by user</p>"},{"location":"redis-commands/RedisBloom/#cmsinitbyprob-not-implemented","title":"CMS.INITBYPROB (not implemented)","text":"<p>Initializes a Count-Min Sketch to accommodate requested tolerances.</p>"},{"location":"redis-commands/RedisBloom/#cmsincrby-not-implemented","title":"CMS.INCRBY (not implemented)","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"redis-commands/RedisBloom/#cmsquery-not-implemented","title":"CMS.QUERY (not implemented)","text":"<p>Returns the count for one or more items in a sketch</p>"},{"location":"redis-commands/RedisBloom/#cmsmerge-not-implemented","title":"CMS.MERGE (not implemented)","text":"<p>Merges several sketches into one sketch</p>"},{"location":"redis-commands/RedisBloom/#cmsinfo-not-implemented","title":"CMS.INFO (not implemented)","text":"<p>Returns information about a sketch</p>"},{"location":"redis-commands/RedisBloom/#unsupported-topk-commands","title":"Unsupported topk commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisBloom/#topkreserve-not-implemented","title":"TOPK.RESERVE (not implemented)","text":"<p>Initializes a TopK with specified parameters</p>"},{"location":"redis-commands/RedisBloom/#topkadd-not-implemented","title":"TOPK.ADD (not implemented)","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"redis-commands/RedisBloom/#topkincrby-not-implemented","title":"TOPK.INCRBY (not implemented)","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"redis-commands/RedisBloom/#topkquery-not-implemented","title":"TOPK.QUERY (not implemented)","text":"<p>Checks whether one or more items are in a sketch</p>"},{"location":"redis-commands/RedisBloom/#topkcount-not-implemented","title":"TOPK.COUNT (not implemented)","text":"<p>Return the count for one or more items are in a sketch</p>"},{"location":"redis-commands/RedisBloom/#topklist-not-implemented","title":"TOPK.LIST (not implemented)","text":"<p>Return full list of items in Top K list</p>"},{"location":"redis-commands/RedisBloom/#topkinfo-not-implemented","title":"TOPK.INFO (not implemented)","text":"<p>Returns information about a sketch</p>"},{"location":"redis-commands/RedisBloom/#unsupported-tdigest-commands","title":"Unsupported tdigest commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisBloom/#tdigestcreate-not-implemented","title":"TDIGEST.CREATE (not implemented)","text":"<p>Allocates memory and initializes a new t-digest sketch</p>"},{"location":"redis-commands/RedisBloom/#tdigestreset-not-implemented","title":"TDIGEST.RESET (not implemented)","text":"<p>Resets a t-digest sketch: empty the sketch and re-initializes it.</p>"},{"location":"redis-commands/RedisBloom/#tdigestadd-not-implemented","title":"TDIGEST.ADD (not implemented)","text":"<p>Adds one or more observations to a t-digest sketch</p>"},{"location":"redis-commands/RedisBloom/#tdigestmerge-not-implemented","title":"TDIGEST.MERGE (not implemented)","text":"<p>Merges multiple t-digest sketches into a single sketch</p>"},{"location":"redis-commands/RedisBloom/#tdigestmin-not-implemented","title":"TDIGEST.MIN (not implemented)","text":"<p>Returns the minimum observation value from a t-digest sketch</p>"},{"location":"redis-commands/RedisBloom/#tdigestmax-not-implemented","title":"TDIGEST.MAX (not implemented)","text":"<p>Returns the maximum observation value from a t-digest sketch</p>"},{"location":"redis-commands/RedisBloom/#tdigestquantile-not-implemented","title":"TDIGEST.QUANTILE (not implemented)","text":"<p>Returns, for each input fraction, an estimation of the value (floating point) that is smaller than the given fraction of observations</p>"},{"location":"redis-commands/RedisBloom/#tdigestcdf-not-implemented","title":"TDIGEST.CDF (not implemented)","text":"<p>Returns, for each input value, an estimation of the fraction (floating-point) of (observations smaller than the given value + half the observations equal to the given value)</p>"},{"location":"redis-commands/RedisBloom/#tdigesttrimmed_mean-not-implemented","title":"TDIGEST.TRIMMED_MEAN (not implemented)","text":"<p>Returns an estimation of the mean value from the sketch, excluding observation values outside the low and high cutoff quantiles</p>"},{"location":"redis-commands/RedisBloom/#tdigestrank-not-implemented","title":"TDIGEST.RANK (not implemented)","text":"<p>Returns, for each input value (floating-point), the estimated rank of the value (the number of observations in the sketch that are smaller than the value + half the number of observations that are equal to the value)</p>"},{"location":"redis-commands/RedisBloom/#tdigestrevrank-not-implemented","title":"TDIGEST.REVRANK (not implemented)","text":"<p>Returns, for each input value (floating-point), the estimated reverse rank of the value (the number of observations in the sketch that are larger than the value + half the number of observations that are equal to the value)</p>"},{"location":"redis-commands/RedisBloom/#tdigestbyrank-not-implemented","title":"TDIGEST.BYRANK (not implemented)","text":"<p>Returns, for each input rank, an estimation of the value (floating-point) with that rank</p>"},{"location":"redis-commands/RedisBloom/#tdigestbyrevrank-not-implemented","title":"TDIGEST.BYREVRANK (not implemented)","text":"<p>Returns, for each input reverse rank, an estimation of the value (floating-point) with that reverse rank</p>"},{"location":"redis-commands/RedisBloom/#tdigestinfo-not-implemented","title":"TDIGEST.INFO (not implemented)","text":"<p>Returns information and statistics about a t-digest sketch</p>"},{"location":"redis-commands/RedisGraph/","title":"Graph commands","text":"<p>Module currently not implemented in fakeredis.</p>"},{"location":"redis-commands/RedisGraph/#unsupported-graph-commands","title":"Unsupported graph commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisGraph/#graphquery-not-implemented","title":"GRAPH.QUERY (not implemented)","text":"<p>Executes the given query against a specified graph</p>"},{"location":"redis-commands/RedisGraph/#graphro_query-not-implemented","title":"GRAPH.RO_QUERY (not implemented)","text":"<p>Executes a given read only query against a specified graph</p>"},{"location":"redis-commands/RedisGraph/#graphdelete-not-implemented","title":"GRAPH.DELETE (not implemented)","text":"<p>Completely removes the graph and all of its entities</p>"},{"location":"redis-commands/RedisGraph/#graphexplain-not-implemented","title":"GRAPH.EXPLAIN (not implemented)","text":"<p>Returns a query execution plan without running the query</p>"},{"location":"redis-commands/RedisGraph/#graphprofile-not-implemented","title":"GRAPH.PROFILE (not implemented)","text":"<p>Executes a query and returns an execution plan augmented with metrics for each operation's execution</p>"},{"location":"redis-commands/RedisGraph/#graphslowlog-not-implemented","title":"GRAPH.SLOWLOG (not implemented)","text":"<p>Returns a list containing up to 10 of the slowest queries issued against the given graph</p>"},{"location":"redis-commands/RedisGraph/#graphconfig-get-not-implemented","title":"GRAPH.CONFIG GET (not implemented)","text":"<p>Retrieves a RedisGraph configuration</p>"},{"location":"redis-commands/RedisGraph/#graphconfig-set-not-implemented","title":"GRAPH.CONFIG SET (not implemented)","text":"<p>Updates a RedisGraph configuration</p>"},{"location":"redis-commands/RedisGraph/#graphlist-not-implemented","title":"GRAPH.LIST (not implemented)","text":"<p>Lists all graph keys in the keyspace</p>"},{"location":"redis-commands/RedisJson/","title":"JSON commands","text":""},{"location":"redis-commands/RedisJson/#json-commands_1","title":"json commands","text":""},{"location":"redis-commands/RedisJson/#jsondel","title":"JSON.DEL","text":"<p>Deletes a value</p>"},{"location":"redis-commands/RedisJson/#jsonforget","title":"JSON.FORGET","text":"<p>Deletes a value</p>"},{"location":"redis-commands/RedisJson/#jsonget","title":"JSON.GET","text":"<p>Gets the value at one or more paths in JSON serialized form</p>"},{"location":"redis-commands/RedisJson/#jsontoggle","title":"JSON.TOGGLE","text":"<p>Toggles a boolean value</p>"},{"location":"redis-commands/RedisJson/#jsonclear","title":"JSON.CLEAR","text":"<p>Clears all values from an array or an object and sets numeric values to <code>0</code></p>"},{"location":"redis-commands/RedisJson/#jsonset","title":"JSON.SET","text":"<p>Sets or updates the JSON value at a path</p>"},{"location":"redis-commands/RedisJson/#jsonmget","title":"JSON.MGET","text":"<p>Returns the values at a path from one or more keys</p>"},{"location":"redis-commands/RedisJson/#jsonnumincrby","title":"JSON.NUMINCRBY","text":"<p>Increments the numeric value at path by a value</p>"},{"location":"redis-commands/RedisJson/#jsonnummultby","title":"JSON.NUMMULTBY","text":"<p>Multiplies the numeric value at path by a value</p>"},{"location":"redis-commands/RedisJson/#jsonstrappend","title":"JSON.STRAPPEND","text":"<p>Appends a string to a JSON string value at path</p>"},{"location":"redis-commands/RedisJson/#jsonstrlen","title":"JSON.STRLEN","text":"<p>Returns the length of the JSON String at path in key</p>"},{"location":"redis-commands/RedisJson/#jsonarrappend","title":"JSON.ARRAPPEND","text":"<p>Append one or more json values into the array at path after the last element in it.</p>"},{"location":"redis-commands/RedisJson/#jsonarrindex","title":"JSON.ARRINDEX","text":"<p>Returns the index of the first occurrence of a JSON scalar value in the array at path</p>"},{"location":"redis-commands/RedisJson/#jsonarrinsert","title":"JSON.ARRINSERT","text":"<p>Inserts the JSON scalar(s) value at the specified index in the array at path</p>"},{"location":"redis-commands/RedisJson/#jsonarrlen","title":"JSON.ARRLEN","text":"<p>Returns the length of the array at path</p>"},{"location":"redis-commands/RedisJson/#jsonarrpop","title":"JSON.ARRPOP","text":"<p>Removes and returns the element at the specified index in the array at path</p>"},{"location":"redis-commands/RedisJson/#jsonarrtrim","title":"JSON.ARRTRIM","text":"<p>Trims the array at path to contain only the specified inclusive range of indices from start to stop</p>"},{"location":"redis-commands/RedisJson/#jsonobjkeys","title":"JSON.OBJKEYS","text":"<p>Returns the JSON keys of the object at path</p>"},{"location":"redis-commands/RedisJson/#jsonobjlen","title":"JSON.OBJLEN","text":"<p>Returns the number of keys of the object at path</p>"},{"location":"redis-commands/RedisJson/#jsontype","title":"JSON.TYPE","text":"<p>Returns the type of the JSON value at path</p>"},{"location":"redis-commands/RedisJson/#unsupported-json-commands","title":"Unsupported json commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisJson/#jsonresp-not-implemented","title":"JSON.RESP (not implemented)","text":"<p>Returns the JSON value at path in Redis Serialization Protocol (RESP)</p>"},{"location":"redis-commands/RedisJson/#jsondebug-not-implemented","title":"JSON.DEBUG (not implemented)","text":"<p>Debugging container command</p>"},{"location":"redis-commands/RedisJson/#jsondebug-help-not-implemented","title":"JSON.DEBUG HELP (not implemented)","text":"<p>Shows helpful information</p>"},{"location":"redis-commands/RedisJson/#jsondebug-memory-not-implemented","title":"JSON.DEBUG MEMORY (not implemented)","text":"<p>Reports the size in bytes of a key</p>"},{"location":"redis-commands/RedisSearch/","title":"Search commands","text":"<p>Module currently not implemented in fakeredis.</p>"},{"location":"redis-commands/RedisSearch/#unsupported-search-commands","title":"Unsupported search commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisSearch/#ftcreate-not-implemented","title":"FT.CREATE (not implemented)","text":"<p>Creates an index with the given spec</p>"},{"location":"redis-commands/RedisSearch/#ftinfo-not-implemented","title":"FT.INFO (not implemented)","text":"<p>Returns information and statistics on the index</p>"},{"location":"redis-commands/RedisSearch/#ftexplain-not-implemented","title":"FT.EXPLAIN (not implemented)","text":"<p>Returns the execution plan for a complex query</p>"},{"location":"redis-commands/RedisSearch/#ftexplaincli-not-implemented","title":"FT.EXPLAINCLI (not implemented)","text":"<p>Returns the execution plan for a complex query</p>"},{"location":"redis-commands/RedisSearch/#ftalter-not-implemented","title":"FT.ALTER (not implemented)","text":"<p>Adds a new field to the index</p>"},{"location":"redis-commands/RedisSearch/#ftdropindex-not-implemented","title":"FT.DROPINDEX (not implemented)","text":"<p>Deletes the index</p>"},{"location":"redis-commands/RedisSearch/#ftaliasadd-not-implemented","title":"FT.ALIASADD (not implemented)","text":"<p>Adds an alias to the index</p>"},{"location":"redis-commands/RedisSearch/#ftaliasupdate-not-implemented","title":"FT.ALIASUPDATE (not implemented)","text":"<p>Adds or updates an alias to the index</p>"},{"location":"redis-commands/RedisSearch/#ftaliasdel-not-implemented","title":"FT.ALIASDEL (not implemented)","text":"<p>Deletes an alias from the index</p>"},{"location":"redis-commands/RedisSearch/#fttagvals-not-implemented","title":"FT.TAGVALS (not implemented)","text":"<p>Returns the distinct tags indexed in a Tag field</p>"},{"location":"redis-commands/RedisSearch/#ftsynupdate-not-implemented","title":"FT.SYNUPDATE (not implemented)","text":"<p>Creates or updates a synonym group with additional terms</p>"},{"location":"redis-commands/RedisSearch/#ftsyndump-not-implemented","title":"FT.SYNDUMP (not implemented)","text":"<p>Dumps the contents of a synonym group</p>"},{"location":"redis-commands/RedisSearch/#ftspellcheck-not-implemented","title":"FT.SPELLCHECK (not implemented)","text":"<p>Performs spelling correction on a query, returning suggestions for misspelled terms</p>"},{"location":"redis-commands/RedisSearch/#ftdictadd-not-implemented","title":"FT.DICTADD (not implemented)","text":"<p>Adds terms to a dictionary</p>"},{"location":"redis-commands/RedisSearch/#ftdictdel-not-implemented","title":"FT.DICTDEL (not implemented)","text":"<p>Deletes terms from a dictionary</p>"},{"location":"redis-commands/RedisSearch/#ftdictdump-not-implemented","title":"FT.DICTDUMP (not implemented)","text":"<p>Dumps all terms in the given dictionary</p>"},{"location":"redis-commands/RedisSearch/#ft_list-not-implemented","title":"FT._LIST (not implemented)","text":"<p>Returns a list of all existing indexes</p>"},{"location":"redis-commands/RedisSearch/#ftconfig-set-not-implemented","title":"FT.CONFIG SET (not implemented)","text":"<p>Sets runtime configuration options</p>"},{"location":"redis-commands/RedisSearch/#ftconfig-get-not-implemented","title":"FT.CONFIG GET (not implemented)","text":"<p>Retrieves runtime configuration options</p>"},{"location":"redis-commands/RedisSearch/#ftconfig-help-not-implemented","title":"FT.CONFIG HELP (not implemented)","text":"<p>Help description of runtime configuration options</p>"},{"location":"redis-commands/RedisSearch/#ftsearch-not-implemented","title":"FT.SEARCH (not implemented)","text":"<p>Searches the index with a textual query, returning either documents or just ids</p>"},{"location":"redis-commands/RedisSearch/#ftaggregate-not-implemented","title":"FT.AGGREGATE (not implemented)","text":"<p>Adds terms to a dictionary</p>"},{"location":"redis-commands/RedisSearch/#ftprofile-not-implemented","title":"FT.PROFILE (not implemented)","text":"<p>Performs a <code>FT.SEARCH</code> or <code>FT.AGGREGATE</code> command and collects performance information</p>"},{"location":"redis-commands/RedisSearch/#ftcursor-read-not-implemented","title":"FT.CURSOR READ (not implemented)","text":"<p>Reads from a cursor</p>"},{"location":"redis-commands/RedisSearch/#ftcursor-del-not-implemented","title":"FT.CURSOR DEL (not implemented)","text":"<p>Deletes a cursor</p>"},{"location":"redis-commands/RedisSearch/#unsupported-suggestion-commands","title":"Unsupported suggestion commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisSearch/#ftsugadd-not-implemented","title":"FT.SUGADD (not implemented)","text":"<p>Adds a suggestion string to an auto-complete suggestion dictionary</p>"},{"location":"redis-commands/RedisSearch/#ftsugget-not-implemented","title":"FT.SUGGET (not implemented)","text":"<p>Gets completion suggestions for a prefix</p>"},{"location":"redis-commands/RedisSearch/#ftsugdel-not-implemented","title":"FT.SUGDEL (not implemented)","text":"<p>Deletes a string from a suggestion index</p>"},{"location":"redis-commands/RedisSearch/#ftsuglen-not-implemented","title":"FT.SUGLEN (not implemented)","text":"<p>Gets the size of an auto-complete suggestion dictionary</p>"},{"location":"redis-commands/RedisTimeSeries/","title":"Time Series commands","text":"<p>Module currently not implemented in fakeredis.</p>"},{"location":"redis-commands/RedisTimeSeries/#unsupported-timeseries-commands","title":"Unsupported timeseries commands","text":"<p>To implement support for a command, see here </p>"},{"location":"redis-commands/RedisTimeSeries/#tscreate-not-implemented","title":"TS.CREATE (not implemented)","text":"<p>Create a new time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsdel-not-implemented","title":"TS.DEL (not implemented)","text":"<p>Delete all samples between two timestamps for a given time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsalter-not-implemented","title":"TS.ALTER (not implemented)","text":"<p>Update the retention, chunk size, duplicate policy, and labels of an existing time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsadd-not-implemented","title":"TS.ADD (not implemented)","text":"<p>Append a sample to a time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsmadd-not-implemented","title":"TS.MADD (not implemented)","text":"<p>Append new samples to one or more time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsincrby-not-implemented","title":"TS.INCRBY (not implemented)","text":"<p>Increase the value of the sample with the maximal existing timestamp, or create a new sample with a value equal to the value of the sample with the maximal existing timestamp with a given increment</p>"},{"location":"redis-commands/RedisTimeSeries/#tsdecrby-not-implemented","title":"TS.DECRBY (not implemented)","text":"<p>Decrease the value of the sample with the maximal existing timestamp, or create a new sample with a value equal to the value of the sample with the maximal existing timestamp with a given decrement</p>"},{"location":"redis-commands/RedisTimeSeries/#tscreaterule-not-implemented","title":"TS.CREATERULE (not implemented)","text":"<p>Create a compaction rule</p>"},{"location":"redis-commands/RedisTimeSeries/#tsdeleterule-not-implemented","title":"TS.DELETERULE (not implemented)","text":"<p>Delete a compaction rule</p>"},{"location":"redis-commands/RedisTimeSeries/#tsrange-not-implemented","title":"TS.RANGE (not implemented)","text":"<p>Query a range in forward direction</p>"},{"location":"redis-commands/RedisTimeSeries/#tsrevrange-not-implemented","title":"TS.REVRANGE (not implemented)","text":"<p>Query a range in reverse direction</p>"},{"location":"redis-commands/RedisTimeSeries/#tsmrange-not-implemented","title":"TS.MRANGE (not implemented)","text":"<p>Query a range across multiple time series by filters in forward direction</p>"},{"location":"redis-commands/RedisTimeSeries/#tsmrevrange-not-implemented","title":"TS.MREVRANGE (not implemented)","text":"<p>Query a range across multiple time-series by filters in reverse direction</p>"},{"location":"redis-commands/RedisTimeSeries/#tsget-not-implemented","title":"TS.GET (not implemented)","text":"<p>Get the last sample</p>"},{"location":"redis-commands/RedisTimeSeries/#tsmget-not-implemented","title":"TS.MGET (not implemented)","text":"<p>Get the last samples matching a specific filter</p>"},{"location":"redis-commands/RedisTimeSeries/#tsinfo-not-implemented","title":"TS.INFO (not implemented)","text":"<p>Returns information and statistics for a time series</p>"},{"location":"redis-commands/RedisTimeSeries/#tsqueryindex-not-implemented","title":"TS.QUERYINDEX (not implemented)","text":"<p>Get all time series keys matching a filter list</p>"}]}